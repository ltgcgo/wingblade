// Copyright (c) Lightingale WingBlade Author(s) 2023.
// Licensed under GNU LGPL 3.0 or later.
"use strict";if(!globalThis.self){globalThis.self=globalThis};if(self.Bun){let a=await import("node:os");let e=await import("node:dns");self.os=a;self.dns=e;}else if(self.Deno){}else{let {WebSocket, WebSocketServer}=await import("ws");let {fetch,Request,Response}=await import("undici");let a=await import("node:os");let b=await import("node:fs");let c=await import("node:http");let d=await import("node:crypto");let e=await import("node:dns");self.WebSocket=WebSocket;self.WebSocketService=WebSocketServer;self.fetch=fetch;self.Request=Request;self.Response=Response;self.os=a;self.fs=b;self.http=c;self.crypto=d;self.dns=e};let ce=Object.defineProperty;let le=(e,t,r)=>t in e?ce(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;let i=(e,t,r)=>(le(e,typeof t!="symbol"?t+"":t,r),r);let f=class{constructor(e,t="granted"){if(!e)throw new TypeError(`The provided value "${e}" is not a valid permission name.`);this.name=e,this.state=t}};let he={query:async e=>new f(e?.name),request:async e=>new f(e?.name),revoke:async e=>new f(e?.name),querySync:e=>new f(e?.name),requestSync:e=>new f(e?.name),revokeSync:e=>new f(e?.name)},m,j=(m=class{static get memory(){let{rss:e,heapTotal:t,heapUsed:r,external:s}=process.memoryUsage(),n=os.totalmem(),o=os.freemem();return{rss:e,heapTotal:t,heapUsed:r,external:s,total:n,free:o}}static exit(e=0){process.exit(e)}},i(m,"os",os.platform()),i(m,"variant","Node"),i(m,"version",process.version.replace("v","")),i(m,"persist",!0),i(m,"networkDefer",!1),i(m,"cores",os.cpus().length),i(m,"perms",he),m),D="delete,get,has,set,toObject".split(","),q=new Proxy({get:(e,t)=>process.env[e]||t,set:(e,t)=>{process.env[e]=t},delete:e=>{delete process.env[e]},has:e=>!!process.env[e],toObject:()=>process.env},{get:(e,t)=>D.indexOf(t)<0&&t.constructor==String?e.get(t):e[t],set:(e,t,r)=>{if(D.indexOf(t)<0)if(t.constructor==String)e.set(t,r);else throw new TypeError("Invalid type for key");else throw new Error("Tried to write protected properties")},has:(e,t)=>D.indexOf(t)<0?t.constructor==String?e.has(t):e[t]!=null:!1,deleteProperty:(e,t)=>{if(D.indexOf(t)<0)if(t.constructor==String)e.delete(t);else throw new TypeError("Invalid type for key");else throw new Error("Tried to delete protected properties")}});let ue=class{static async read(e,t){return new Uint8Array((await fs.promises.readFile(e,t)).buffer)}static async write(e,t,r){let s={flag:"w"};r.append&&(s.flag="a"),r.signal&&(s.signal=r.signal),r.mode&&(s.mode=r.mode),await fs.promises.writeFile(e,t,s)}},G=ue;let de=class extends EventTarget{#e;#r;#t;#s;#n;#h;#o;#a;#l=[];#c=[];#i=3;#u=!1;CONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3;get protocol(){return this.#e}get hostname(){return this.#r}get port(){return this.#t}get readyState(){return this.#i}get source(){return this.#o}get sink(){return this.#a}addEventListener(e,t,r){e=="open"&&this.readyState==this.OPEN&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}send(e){if(this.#u)throw new Error("Cannot enqueue or send data on a freed connection");this.#i!=1?this.#l.push(e):this.#a?.desiredSize<0||this.#c.length?(this.#c.push(e),this.#a.ready.then(()=>{let t=this.#c.shift();t&&this.#a.write(t)})):this.#a.write(e)}async connect(){if(this.#u)throw new Error("Cannot restart a freed connection");switch(this.#i<this.CLOSING&&console.debug(`${this.#e.toUpperCase()} connection is already open.`),this.#i=this.CONNECTING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#i=this.OPEN,this.dispatchEvent(new Event("open"))}close(){switch(this.#i>this.OPEN&&console.debug(`${this.#e.toUpperCase()} connection is already closed.`),this.#i=this.CLOSING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#i=this.CLOSED,this.dispatchEvent(new Event("close"))}free(){return this.close(),this.#u=!0,this.#l.splice(0,this.#l.length)}constructor({proto:e,host:t,port:r},s){super(),e=e||"tcp",t=t||"127.0.0.1",r=r||80,this.#e=e,this.#r=t,this.#t=r,this.addEventListener("open",async()=>{this.#l.forEach(n=>{this.send(n)})}),this.addEventListener("close",()=>{this.#c.length&&this.#l.splice(0,0,this.#c.splice(0,this.#c.length))}),s&&this.connect()}},B,fe=(B=class{},i(B,"RawClient",de),B),F=fe;let O='<!DOCTYPE html><head><meta charset="utf-8"/><title>WingBlade error</title><style>body{background:#000;color:#ccc;}</style></head><body><div style="width:75vw;min-width:360px;max-width:1080px;margin:0 auto;"><p>WingBlade has encountered an error on ${runtime}.</p><pre>${stackTrace}</pre></div></body>\n';let we=class{#e;#r;#t=!1;#s=[];#n={open:[],message:[],error:[],close:[]};addEventListener(e,t){this.#e?e!="open"?this.#e.addEventListener(e,t):t(new Event("open")):this.#n[e].push(t)}get binaryType(){return this.#e?.binaryType||""}get bufferedAmount(){return this.#e?.bufferedAmount||0}get extensions(){return this.#e?.extensions||""}get readyState(){return this.#e?.readyState||0}get url(){return this.#e?.url||this.#r}attach(e){if(this.#t)return!1;if(this.#e)throw new Error("Already attached a WebSocket object");this.#e=e;let t=this;switch(e.readyState){case 0:case 1:{for(let s in this.#n)this.#n[s].forEach(n=>{e.addEventListener(s,n)});let r=new Event("open");this.#n.open.forEach(s=>{s(r)});break}case 2:case 3:{t.dispatchEvent(new Event("close"));break}}}close(...e){return this.#t=!0,this.#e?.close(...e)}send(e){this.#e?this.#e.send(e):this.#s.push(e)}constructor(e){this.#r=e.url.replace("http","ws"),this.addEventListener("open",t=>{for(;this.#s.length>0;)this.#e.send(this.#s.shift())})}},ye=class{static serve(e,t={}){let r=`file://${process.cwd()}`,s=t.port||8e3,n=t.hostname||"0.0.0.0",o=http.createServer(async function(a,c){let l,u=new ReadableStream({type:"bytes",start:h=>{l=h},cancel:h=>{},autoAllocateChunkSize:65536}),w={method:a.method,headers:a.headers},y=["GET","HEAD"].indexOf(w.method)==-1;a.on("data",h=>{l.enqueue(h)}).on("end",()=>{l.close()}),y&&(w.body=u,w.duplex="half");let L=new Request(`${a.headers["x-forwarded-proto"]||"http"}://${a.headers.host}${a.url}`,w),p;try{p=await e(L),p?.constructor!=Response&&(p=new Response(JSON.stringify(p),{headers:{"Content-Type":"text/plain"}}))}catch(h){console.error(`Request error at ${L.method} ${L.url}
${h.stack}`),p=new Response(O.replace("${runtime}",WingBlade.rt.variant).replace("${stackTrace}",h.stack.replaceAll(r,"wingblade:app")),{status:502,headers:{"Content-Type":"text/html"}})}p?.headers?.forEach((h,x)=>{c.setHeader(x,h)}),c.statusCode=p?.status||200,p?.statusText&&(c.statusMessage=p.statusText),c.flushHeaders();let d=p.body.getReader(),T=!0;for(;T;)await d.read().then(({done:h,value:x})=>{h?(c.end(),T=!1):c.write(x)})});return o.on("upgrade",async(a,c,l)=>{let u={method:a.method,headers:a.headers},w=new Request(`${a.headers["x-forwarded-proto"]||"http"}://${a.headers.host}${a.url}`,u);w.raw={requester:a,socket:c,head:l},await e(w)}),o.listen(s,n,()=>{(t.onListen||function({port:a,hostname:c}){c&&(c="127.0.0.1"),console.error(`WingBlade serving at http://${c}:${a}`)})({port:s,hostname:n})}),o}static acceptWs(e,t){let r=new WebSocketService({noServer:!0}),s=new we(e);return r.handleUpgrade(e.raw.requester,e.raw.socket,e.raw.head,function(n){s.attach(n)}),{socket:s,response:new Response(null,{status:200})}}},H=ye;let me=class{static randomInt(e){return Math.floor(Math.random()*e)}static sleep(e,t=0){return new Promise((r,s)=>{setTimeout(r,e+Math.floor(t*Math.random()))})}},_=me;if(self.ReadableStream)ReadableStream.prototype.array=async function(){let e=this.getReader(),t=[],r=!0;for(;r;){let{done:s,value:n}=await e.read();s&&(r=!1),n?.byteLength&&t.push(new Uint8Array(n.buffer).subarray(n.byteOffset,n.byteLength))}return t},ReadableStream.prototype.arrayBuffer=async function(){let e=await this.array();return Buffer.concat(e)},ReadableStream.prototype.blob=async function(){return new Blob(await this.array())},ReadableStream.prototype.text=async function(e="utf-8"){let t=await this.arrayBuffer();return new TextDecoder(e,{fatal:!0}).decode(t)},ReadableStream.prototype.json=async function(e){return JSON.parse(await this.text(e))};else throw"ReadableStream not present in this runtime.";let ge=class{#e=!1;#r;#t;resolve(t){let r=this;r.resolved||(r.#e=!0,r.#r=t,r.#t&&(r.#t(t),r.#t=void 0))}wait(){let t=this;return t.#e?new Promise(r=>{r(t.#r)}):new Promise(r=>{t.#t=r})}},ve=class{#e=256;#r=0;#t;#s;#n;#h;#o;#a=new ge;alwaysCopy=!1;get chunk(){return this.#e}get sink(){return this.#t}get source(){return this.#n}attach(t){let r=this;r.#t=t,r.#s=t.getReader(),r.#a.resolve()}constructor(t=1024,r=!1){let s=this;s.#e=t,s.alwaysCopy=r,s.#o=new ByteLengthQueuingStrategy({highWaterMark:t});let n=0,o;s.#n=new ReadableStream({cancel:async a=>{await s.#t.cancel(a)},start:async a=>{},pull:async a=>{s.#r++;let c=!1;await s.#a.wait();let l=!0,u=0;for(;l&&u<s.#e;){let{done:w,value:y}=await s.#s.read(),L=y?.byteLength||0;u+=L;let p=0,d,T=!0;if(y?.byteLength)for(d=new Uint8Array(y.buffer,y.byteOffset,y.byteLength);T;){let h;if(d.byteLength<1&&(T=!1),n){let x=d.subarray(0,s.#e-n);o.set(x,n),n+x.byteLength<s.#e?n+=d.byteLength:(h=o,n=0,o=new Uint8Array(s.#e)),d=d.subarray(x.byteLength)}else d.byteLength<s.#e?(n=d.byteLength,o?.constructor!=Uint8Array&&(o=new Uint8Array(s.#e)),o.set(d)):s.alwaysCopy?(h=new Uint8Array(s.#e),h.set(d.subarray(0,s.#e))):h=d.subarray(0,s.#e),d=d.subarray(s.#e);h&&(a.enqueue(new Uint8Array(h)),p+=h?.byteLength)}w&&(n&&a.enqueue(o.subarray(0,n)),a.close(),l=!1)}}},this.#o)}},J=ve;let C=function(e){self.navigator||(self.navigator={});let t=navigator;switch(t.userAgent||(t.userAgent=`${e.rt.variant}/${e.rt.version}`),t.language||(t.language=null),t.languages?.constructor||(t.languages=[]),t.hardwareConcurrency||(t.hardwareConcurrency=e.rt.cores),t.deviceMemory||(t.deviceMemory=Math.min(2**Math.round(Math.log2(e.rt.memory.total/1073741824)),8)),t.permissions||(t.permissions={query:r=>e.rt.perms.querySync(r)}),e.rt.variant){case"Node":case"Bun":break;case"Deno":break}};self.ChokerStream=J;let g,A=(g=class{},i(g,"args",process.argv.slice(2)),i(g,"rt",j),i(g,"env",q),i(g,"file",G),i(g,"net",F),i(g,"web",H),i(g,"util",_),g);C(A);let be={query:e=>Deno.permissions.query(e),request:e=>Deno.permissions.request(e),revoke:e=>Deno.permissions.revoke(e),querySync:e=>Deno.permissions.querySync(e),requestSync:e=>Deno.permissions.requestSync(e),revokeSync:e=>Deno.permissions.revokeSync(e)},v,z=(v=class{static get memory(){let{rss:e,heapTotal:t,heapUsed:r,external:s}=Deno.memoryUsage(),{total:n,free:o}=Deno.systemMemoryInfo();return{rss:e,heapTotal:t,heapUsed:r,external:s,total:n,free:o}}static exit(e=0){Deno.exit(e)}},i(v,"os",Deno.build.os),i(v,"variant","Deno"),i(v,"version",Deno.version.deno),i(v,"persist",!0),i(v,"networkDefer",!1),i(v,"cores",8),i(v,"perms",be),v),R="delete,get,has,set,toObject".split(","),Q=new Proxy({get:(e,t)=>Deno.env.get(e)||t,set:(e,t)=>{Deno.env.set(e,t)},delete:e=>{Deno.env.delete(e)},has:e=>Deno.env.has(e),toObject:()=>Deno.env.toObject()},{get:(e,t)=>R.indexOf(t)<0&&t.constructor==String?e.get(t):e[t],set:(e,t,r)=>{if(R.indexOf(t)<0)if(t.constructor==String)e.set(t,r);else throw new TypeError("Invalid type for key");else throw new Error("Tried to write protected properties")},has:(e,t)=>R.indexOf(t)<0?t.constructor==String?e.has(t):e[t]!=null:!1,deleteProperty:(e,t)=>{if(R.indexOf(t)<0)if(t.constructor==String)e.delete(t);else throw new TypeError("Invalid type for key");else throw new Error("Tried to delete protected properties")}});let Ee=class{static async read(e,t){return await Deno.readFile(e,t)}static async write(e,t,r){await Deno.writeFile(e,t,r)}},Y=Ee;let Se=class extends EventTarget{#e;#r;#t;#s;#n;#h;#o;#a;#l=[];#c=[];#i=3;#u=!1;CONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3;get protocol(){return this.#e}get hostname(){return this.#r}get port(){return this.#t}get readyState(){return this.#i}get source(){return this.#o}get sink(){return this.#a}addEventListener(e,t,r){e=="open"&&this.readyState==this.OPEN&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}send(e){if(this.#u)throw new Error("Cannot enqueue or send data on a freed connection");this.#i!=this.OPEN?this.#l.push(e):this.#a?.desiredSize<0||this.#c.length?(this.#c.push(e),this.#a.ready.then(()=>{let t=this.#c.shift();t&&this.#a.write(t)})):this.#a.write(e)}async connect(){if(this.#u)throw new Error("Cannot restart a freed connection");if(this.#i<this.CLOSING){console.debug(`${this.#e.toUpperCase()} connection is already open.`);return}switch(this.#i=this.CONNECTING,this.#e){case"tcp":{let e=await Deno.connect({hostname:this.#r,port:this.#t});this.#s=e,this.#n=e.readable,this.#o=e.readable.getReader(),this.#h=e.writable,this.#a=e.writable.getWriter();break}default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#i=this.OPEN,this.dispatchEvent(new Event("open")),(async()=>{try{let e=!0;for(;e;){let{value:t,done:r}=await this.#o.read();e=!r,t&&this.dispatchEvent(new MessageEvent("data",{data:t})),r&&this.close()}}catch(e){this.dispatchEvent(new ErrorEvent("error",{message:e.message,error:e})),this.close()}})()}close(){if(this.#i>this.OPEN){console.debug(`${this.#e.toUpperCase()} connection is already closed.`);return}switch(this.#i=this.CLOSING,this.#e){case"tcp":{let{rid:e}=this.#s;Deno.resources()[e]&&this.#s?.close();break}default:throw new Error(`Invalid protocol "${this.#e}"`)}this.#i=this.CLOSED,this.dispatchEvent(new Event("close"))}free(){return this.close(),this.#u=!0,this.#l.splice(0,this.#l.length)}constructor({proto:e,host:t,port:r},s){super(),e=e||"tcp",t=t||"127.0.0.1",r=r||80,this.#e=e,this.#r=t,this.#t=r,this.addEventListener("open",async()=>{this.#l.forEach(n=>{this.send(n)})}),this.addEventListener("close",()=>{this.#c.length&&this.#l.splice(0,0,this.#c.splice(0,this.#c.length))}),s&&this.connect()}},Le=class extends EventTarget{#e;#r;#t;#s;#n;#h;#o=1;OPEN=1;CLOSING=2;CLOSED=3;get ip(){return this.#e.hostname||"0.0.0.0"}get port(){return this.#e.port||0}get readyState(){return this.#o}get source(){return this.#n}get sink(){return this.#h}send(e){this.#o==1&&this.#h.write(e)}close(){this.#o=this.CLOSING,this.#r.close(),this.#o=this.CLOSED,this.dispatchEvent(new Event("close"))}addEventListener(e,t,r){e=="open"&&this.readyState==this.OPEN&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}constructor(e){super(),this.#e=e.remoteAddr,this.#r=e,this.#t=e.readable,this.#n=e.readable.getReader(),this.#s=e.writable,this.#h=e.writable.getWriter(),(async()=>{let t=!0;for(;t;){let{value:r,done:s}=await this.#n.read();t=!s,r&&this.dispatchEvent(new MessageEvent("data",{data:r})),s&&this.close()}})()}},xe=class extends EventTarget{#e;#r;#t;#s;#n;#h=!1;#o=!1;get active(){return this.#h}get proto(){return this.#e}get host(){return this.#r}get port(){return this.#t}get reuse(){return this.#s}async listen(){if(this.#o)throw new Error("Cannot restart a freed connection");if(this.#h){console.debug(`${this.#e.toUpperCase()} server on ${this.#r}:${this.#t} is already active.`);return}let e=this;try{switch(this.#e){case"tcp":{e.#n=Deno.listen({hostname:e.#r,port:e.#t,reusePort:e.#s}),e.dispatchEvent(new Event("listen"));for await(let t of e.#n.accept())e.dispatchEvent(new MessageEvent("accept"),{data:new Le(t)});break}default:throw e.free(),new Error(`Invalid protocol "${e.#e}"`)}}catch{this.dispatchEvent(new Event("close"))}}close(){if(!this.#h){console.debug(`${this.#e.toUpperCase()} server on ${this.#r}:${this.#t} is already closed.`);return}switch(this.#e){case"tcp":{this.#n?.close();break}}}free(){this.close(),this.#o=!0}constructor({proto:e,host:t,port:r,reuse:s},n){super(),e=e||"tcp",t=t||"0.0.0.0",r=r||8e3,this.#e=e,this.#r=t,this.#t=r,this.#s=s,this.addEventListener("listen",()=>{console.error(`WingBlade ${e.toUpperCase()} server listening on ${t}:${r}`)}),n&&this.listen()}},$,Oe=($=class{},i($,"RawClient",Se),i($,"RawServer",xe),$),K=Oe;function V(){let e,t="pending",r=new Promise((s,n)=>{e={async resolve(o){await o,t="fulfilled",s(o)},reject(o){t="rejected",n(o)}}});return Object.defineProperty(r,"state",{get:()=>t}),Object.assign(r,e)}function Ce(e,t={}){let{signal:r,persistent:s}=t;return r?.aborted?Promise.reject(new DOMException("Delay was aborted.","AbortError")):new Promise((n,o)=>{let a=()=>{clearTimeout(l),o(new DOMException("Delay was aborted.","AbortError"))},l=setTimeout(()=>{r?.removeEventListener("abort",a),n()},e);if(r?.addEventListener("abort",a,{once:!0}),s===!1)try{Deno.unrefTimer(l)}catch(u){if(!(u instanceof ReferenceError))throw u;console.error("`persistent` option is only available in Deno")}})}var X=class{#e=0;#r=[];#t=[];#s=V();add(t){++this.#e,this.#n(t[Symbol.asyncIterator]())}async#n(t){try{let{value:r,done:s}=await t.next();s?--this.#e:this.#r.push({iterator:t,value:r})}catch(r){this.#t.push(r)}this.#s.resolve()}async*iterate(){for(;this.#e>0;){await this.#s;for(let t=0;t<this.#r.length;t++){let{iterator:r,value:s}=this.#r[t];yield s,this.#n(r)}if(this.#t.length){for(let t of this.#t)throw t;this.#t.length=0}this.#r.length=0,this.#s=V()}}[Symbol.asyncIterator](){return this.iterate()}},N="Server closed",Te=5,De=1e3,P=class{#e;#r;#t;#s=!1;#n=new Set;#h=new AbortController;#o=new Set;#a;constructor(t){this.#e=t.port,this.#r=t.hostname,this.#t=t.handler,this.#a=t.onError??function(r){return console.error(r),new Response("Internal Server Error",{status:500})}}async serve(t){if(this.#s)throw new Deno.errors.Http(N);this.#d(t);try{return await this.#i(t)}finally{this.#f(t);try{t.close()}catch{}}}async listenAndServe(){if(this.#s)throw new Deno.errors.Http(N);let t=Deno.listen({port:this.#e??80,hostname:this.#r??"0.0.0.0",transport:"tcp"});return await this.serve(t)}async listenAndServeTls(t,r){if(this.#s)throw new Deno.errors.Http(N);let s=Deno.listenTls({port:this.#e??443,hostname:this.#r??"0.0.0.0",certFile:t,keyFile:r,transport:"tcp"});return await this.serve(s)}close(){if(this.#s)throw new Deno.errors.Http(N);this.#s=!0;for(let t of this.#n)try{t.close()}catch{}this.#n.clear(),this.#h.abort();for(let t of this.#o)this.#u(t);this.#o.clear()}get closed(){return this.#s}get addrs(){return Array.from(this.#n).map(t=>t.addr)}async#l(t,r){let s;try{if(s=await this.#t(t.request,r),s.bodyUsed&&s.body!==null)throw new TypeError("Response body already consumed.")}catch(n){s=await this.#a(n)}try{await t.respondWith(s)}catch{}}async#c(t,r){for(;!this.#s;){let s;try{s=await t.nextRequest()}catch{break}if(s===null)break;this.#l(s,r)}this.#u(t)}async#i(t){let r;for(;!this.#s;){let s;try{s=await t.accept()}catch(a){if(a instanceof Deno.errors.BadResource||a instanceof Deno.errors.InvalidData||a instanceof Deno.errors.UnexpectedEof||a instanceof Deno.errors.ConnectionReset||a instanceof Deno.errors.NotConnected){r?r*=2:r=Te,r>=1e3&&(r=De);try{await Ce(r,{signal:this.#h.signal})}catch(c){if(!(c instanceof DOMException&&c.name==="AbortError"))throw c}continue}throw a}r=void 0;let n;try{n=Deno.serveHttp(s)}catch{continue}this.#p(n);let o={localAddr:s.localAddr,remoteAddr:s.remoteAddr};this.#c(n,o)}}#u(t){this.#w(t);try{t.close()}catch{}}#d(t){this.#n.add(t)}#f(t){this.#n.delete(t)}#p(t){this.#o.add(t)}#w(t){this.#o.delete(t)}};function Re(e){return e==="0.0.0.0"?"localhost":e}async function Z(e,t={}){let r=t.port??8e3,s=t.hostname??"0.0.0.0",n=new P({port:r,hostname:s,handler:e,onError:t.onError});t?.signal?.addEventListener("abort",()=>n.close(),{once:!0});let o=Deno.listen({port:r,hostname:s,transport:"tcp"}),a=n.serve(o);return r=n.addrs[0].port,"onListen"in t?t.onListen?.({port:r,hostname:s}):console.log(`Listening on http://${Re(s)}:${r}/`),await a}var $e=class{static serve(e,t={}){let r=`file://${Deno.cwd()}`;return t?.onListen||(t.onListen=function({port:s,hostname:n}){n=="0.0.0.0"&&(n="127.0.0.1"),console.error(`WingBlade serving at http://${n}:${s}`)}),t?.hostname||(t.hostname="0.0.0.0"),t?.port||(t.port=8e3),Z(async(s,n)=>{try{let o=await e(s,n);return o?.constructor==Response?o:new Response(JSON.stringify(o),{headers:{"Content-Type":"text/plain"}})}catch(o){return console.error(`Request error at ${s.method} ${s.url}
${o.stack}`),new Response(O.replace("${runtime}",WingBlade.rt.variant).replace("${stackTrace}",o.stack.replaceAll(r,"wingblade:app")),{status:502,headers:{"Content-Type":"text/html"}})}},t)}static acceptWs(e,t){return Deno.upgradeWebSocket(e,t)}},ee=$e;let Ne=class{static randomInt(e){return Math.floor(Math.random()*e)}static sleep(e,t=0){return new Promise(r=>{AbortSignal.timeout(e+Math.floor(t*Math.random())).addEventListener("abort",()=>{r()})})}},te=Ne;if(self.ReadableStream)ReadableStream.prototype.array=async function(){let e=this.getReader(),t=[],r=!0;for(t.byteLength=0;r;){let{done:s,value:n}=await e.read();s&&(r=!1),n?.byteLength&&(t.push(new Uint8Array(n.buffer).subarray(n.byteOffset,n.byteLength)),t.byteLength+=n.byteLength)}return t},ReadableStream.prototype.arrayBuffer=async function(){let e=await this.array(),t=new Uint8Array(e.byteLength),r=0;return e.forEach(s=>{t.set(s,r),r+=s.byteLength}),t.buffer},ReadableStream.prototype.blob=async function(e="application/octet-stream"){return new Blob(await this.array(),{type:e})},ReadableStream.prototype.text=async function(e="utf-8"){let t=await this.arrayBuffer();return new TextDecoder(e,{fatal:!0}).decode(t)},ReadableStream.prototype.json=async function(e){return JSON.parse(await this.text(e))};else throw"ReadableStream not present in this runtime.";let b,I=(b=class{},i(b,"args",Deno.args),i(b,"rt",z),i(b,"env",Q),i(b,"file",Y),i(b,"net",K),i(b,"web",ee),i(b,"util",te),b);C(I);let ke={query:async e=>new f(e?.name),request:async e=>new f(e?.name),revoke:async e=>new f(e?.name),querySync:e=>new f(e?.name),requestSync:e=>new f(e?.name),revokeSync:e=>new f(e?.name)},E,re=(E=class{static get memory(){let{rss:e,heapTotal:t,heapUsed:r,external:s}=process.memoryUsage(),n=os.totalmem(),o=os.freemem();return{rss:e,heapTotal:t,heapUsed:r,external:s,total:n,free:o}}static exit(e=0){process.exit(e)}},i(E,"os",process.platform),i(E,"variant","Bun"),i(E,"version",Bun.version),i(E,"persist",!0),i(E,"networkDefer",!1),i(E,"cores",os.cpus().length),i(E,"perms",ke),E),k="delete,get,has,set,toObject".split(","),se=new Proxy({get:(e,t)=>Bun.env[e]||t,set:(e,t)=>{Bun.env[e]=t},delete:e=>{delete Bun.env[e]},has:e=>!!Bun.env[e],toObject:()=>Bun.env},{get:(e,t)=>k.indexOf(t)<0&&t.constructor==String?e.get(t):e[t],set:(e,t,r)=>{if(k.indexOf(t)<0)if(t.constructor==String)e.set(t,r);else throw new TypeError("Invalid type for key");else throw new Error("Tried to write protected properties")},has:(e,t)=>k.indexOf(t)<0?t.constructor==String?e.has(t):e[t]!=null:!1,deleteProperty:(e,t)=>{if(k.indexOf(t)<0)if(t.constructor==String)e.delete(t);else throw new TypeError("Invalid type for key");else throw new Error("Tried to delete protected properties")}});let Be=class{static async read(e,t){return new Uint8Array(await Bun.file(e).arrayBuffer())}static async write(e,t,r){await Bun.write(e,t)}},ne=Be;let Ae=class extends EventTarget{#e;#r;#t;#s;#n;#h;#o;#a;#l=[];#c=[];#i=3;#u=!1;CONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3;get protocol(){return this.#e}get hostname(){return this.#r}get port(){return this.#t}get readyState(){return this.#i}get source(){return this.#o}get sink(){return this.#a}addEventListener(e,t,r){e=="open"&&this.readyState==this.OPEN&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}send(e){if(this.#u)throw new Error("Cannot enqueue or send data on a freed connection");this.#i!=1?this.#l.push(e):this.#a?.desiredSize<0||this.#c.length?(this.#c.push(e),this.#a.ready.then(()=>{let t=this.#c.shift();t&&this.#a.write(t)})):this.#a.write(e)}async connect(){if(this.#u)throw new Error("Cannot restart a freed connection");switch(this.#i<this.CLOSING&&console.debug(`${this.#e.toUpperCase()} connection is already open.`),this.#i=this.CONNECTING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#i=this.OPEN,this.dispatchEvent(new Event("open"))}close(){switch(this.#i>this.OPEN&&console.debug(`${this.#e.toUpperCase()} connection is already closed.`),this.#i=this.CLOSING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#i=this.CLOSED,this.dispatchEvent(new Event("close"))}free(){return this.close(),this.#u=!0,this.#l.splice(0,this.#l.length)}constructor({proto:e,host:t,port:r},s){super(),e=e||"tcp",t=t||"127.0.0.1",r=r||80,this.#e=e,this.#r=t,this.#t=r,this.addEventListener("open",async()=>{this.#l.forEach(n=>{this.send(n)})}),this.addEventListener("close",()=>{this.#c.length&&this.#l.splice(0,0,this.#c.splice(0,this.#c.length))}),s&&this.connect()}},U,Pe=(U=class{},i(U,"RawClient",Ae),U),ie=Pe;let Ie=class extends EventTarget{#e;#r;#t=!1;#s=[];#n={open:[],message:[],error:[],close:[]};addEventListener(e,t,r){e=="open"&&this.readyState<2&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}get binaryType(){return this.#e?.binaryType||""}get bufferedAmount(){return this.#e?.bufferedAmount||0}get extensions(){return this.#e?.extensions||""}get readyState(){return this.#e?.readyState||0}get url(){return this.#e?.url||this.#r}attach(e){if(this.#t)return!1;if(this.#e)throw new Error("Already attached a WebSocket object");this.#e=e;let t=this;switch(e.readyState){case 0:case 1:{t.dispatchEvent(new Event("open"));break}case 2:case 3:{t.dispatchEvent(new Event("close"));break}}}close(...e){return this.#t=!0,this.#e?.close(...e)}send(e){return this.#e?this.#e.send(e):(this.#s.push(e),e.length||e.size||e.byteLength||0)}constructor(e){super(),this.#r=e.url.replace("http","ws"),this.addEventListener("open",t=>{for(;this.#s.length>0;)this.#e.send(this.#s.shift())})}},Ue=class{static serve(e,t={}){let r=`${process.cwd()}`,s=t.port||8e3,n=t.hostname||"0.0.0.0",o=Bun.serve({port:s,hostname:n,fetch:async(a,c)=>{a.socket=c;try{let l=await e(a);return l?.constructor!=Response&&(l=new Response(JSON.stringify(l),{headers:{"Content-Type":"text/plain"}})),l}catch(l){let u=l.stack.split(`
`);return u.forEach((w,y,L)=>{L[y]=w.replace("@"," at ").replace("[native code]","bun:internal")}),u.unshift(`${l.name||"Error"}${l.message?":":""} ${l.message||""}`),u=u.join(`
    `),console.error(`Request error at ${a.method} ${a.url}
${u}`),new Response(O.replace("${runtime}",WingBlade.rt.variant).replace("${stackTrace}",u.replaceAll(r,"wingblade:app")),{status:502,headers:{"Content-Type":"text/html"}})}},websocket:{open(a){let c=a.data.wsServer;c.attach(a),c.dispatchEvent(new Event("open"))},message(a,c){a.data.wsServer.dispatchEvent(new MessageEvent("message",{data:c}))},close(a,c,l){a.data.wsServer.dispatchEvent(new Event("close"))}}});return console.error(`WingBlade serving at http://${n=="0.0.0.0"?"127.0.0.1":n}:${s}`),o}static acceptWs(e,t){let r=new Ie(e);return e.socket.upgrade(e,{data:{wsServer:r}}),{socket:r,response:new Response(null,{status:200})}}},ae=Ue;let Me=class{static randomInt(e){return Math.floor(Math.random()*e)}static async sleep(e,t=0){await Bun.sleep(e+Math.floor(t*Math.random()))}},oe=Me;if(self.ReadableStream)ReadableStream.prototype.array=function(){return Bun.readableStreamToArray(this)},ReadableStream.prototype.arrayBuffer=function(){return Bun.readableStreamToArrayBuffer(this)},ReadableStream.prototype.blob=function(){return Bun.readableStreamToBlob(this)},ReadableStream.prototype.json=function(){return Bun.readableStreamToJSON(this)},ReadableStream.prototype.text=function(){return Bun.readableStreamToText(this)};else throw"ReadableStream not present in this runtime.";let S,M=(S=class{},i(S,"args",Bun.argv.slice(2)),i(S,"rt",re),i(S,"env",se),i(S,"file",ne),i(S,"net",ie),i(S,"web",ae),i(S,"util",oe),S);C(M);let W;switch(!0){case self.Deno:{W=I;break}case self.Bun:{W=M;break}default:W=A}export{W as WingBlade};
