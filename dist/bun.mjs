var B=Object.defineProperty;var T=(e,t,r)=>t in e?B(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var s=(e,t,r)=>(T(e,typeof t!="symbol"?t+"":t,r),r);var c,h=(c=class{static get memUsed(){return{rss:0,heapTotal:0,heapUsed:0,external:0}}static exit(e=0){process.exit(e)}},s(c,"os",process.platform),s(c,"variant","Bun"),s(c,"version",Bun.version),s(c,"persist",!0),s(c,"networkDefer",!1),c),u="delete,get,has,set,toObject".split(","),f=new Proxy({get:(e,t)=>Bun.env[e]||t,set:(e,t)=>{Bun.env[e]=t},delete:e=>{delete Bun.env[e]},has:e=>!!Bun.env[e],toObject:()=>Bun.env},{get:(e,t)=>u.indexOf(t)<0&&t.constructor==String?e.get(t):e[t],set:(e,t,r)=>{if(u.indexOf(t)<0)if(t.constructor==String)e.set(t,r);else throw new TypeError("Invalid type for key");else throw new Error("Tried to write protected properties")},has:(e,t)=>u.indexOf(t)<0?t.constructor==String?e.has(t):e[t]!=null:!1,deleteProperty:(e,t)=>{if(u.indexOf(t)<0)if(t.constructor==String)e.delete(t);else throw new TypeError("Invalid type for key");else throw new Error("Tried to delete protected properties")}});var $=class{static async read(e,t){return new Uint8Array(await Bun.file(e).arrayBuffer())}static async write(e,t,r){await Bun.write(e,t)}},v=$;var O=class{},w=O;var m='<!DOCTYPE html><head><meta charset="utf-8"/><title>WingBlade error</title><style>body{background:#000;color:#ccc;}</style></head><body><div style="width:75vw;min-width:360px;max-width:1080px;margin:0 auto;"><p>WingBlade has encountered an error on ${runtime}.</p><pre>${stackTrace}</pre></div></body>\n';var A=class extends EventTarget{#e;#r;#s=!1;#t=[];#n={open:[],message:[],error:[],close:[]};addEventListener(e,t,r){e=="open"&&this.readyState<2&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}get binaryType(){return this.#e?.binaryType||""}get bufferedAmount(){return this.#e?.bufferedAmount||0}get extensions(){return this.#e?.extensions||""}get readyState(){return this.#e?.readyState||0}get url(){return this.#e?.url||this.#r}attach(e){if(this.#s)return!1;if(this.#e)throw new Error("Already attached a WebSocket object");this.#e=e;let t=this;switch(e.readyState){case 0:case 1:{t.dispatchEvent(new Event("open"));break}case 2:case 3:{t.dispatchEvent(new Event("close"));break}}}close(...e){return this.#s=!0,this.#e?.close(...e)}send(e){return this.#e?this.#e.send(e):(this.#t.push(e),e.length||e.size||e.byteLength||0)}constructor(e){super(),this.#r=e.url.replace("http","ws"),this.addEventListener("open",t=>{for(;this.#t.length>0;)this.#e.send(this.#t.shift())})}},P=class{static serve(e,t={}){let r=`${process.cwd()}`,d=t.port||8e3,p=t.hostname||"0.0.0.0",b=Bun.serve({port:d,hostname:p,fetch:async(n,o)=>{n.socket=o;try{let a=await e(n);return a?.constructor!=Response&&(a=new Response(JSON.stringify(a),{headers:{"Content-Type":"text/plain"}})),a}catch(a){let l=a.stack.split(`
`);return l.forEach((x,y,S)=>{S[y]=x.replace("@"," at ").replace("[native code]","bun:internal")}),l.unshift(`${a.name||"Error"}${a.message?":":""} ${a.message||""}`),l=l.join(`
    `),console.error(`Request error at ${n.method} ${n.url}
${l}`),new Response(m.replace("${runtime}",WingBlade.rt.variant).replace("${stackTrace}",l.replaceAll(r,"wingblade:app")),{status:502,headers:{"Content-Type":"text/html"}})}},websocket:{open(n){let o=n.data.wsServer;o.attach(n),o.dispatchEvent(new Event("open"))},message(n,o){n.data.wsServer.dispatchEvent(new MessageEvent("message",{data:o}))},close(n,o,a){n.data.wsServer.dispatchEvent(new Event("close"))}}});return console.error(`WingBlade serving at http://${p=="0.0.0.0"?"127.0.0.1":p}:${d}`),b}static acceptWs(e,t){let r=new A(e);return e.socket.upgrade(e,{data:{wsServer:r}}),{socket:r,response:new Response(null,{status:200})}}},g=P;var k=class{static randomInt(e){return Math.floor(Math.random()*e)}static sleep(e,t=0){return new Promise(r=>{AbortSignal.timeout(e+Math.floor(t*Math.random())).addEventListener("abort",()=>{r()})})}},E=k;var i,_=(i=class{},s(i,"args",Bun.argv.slice(2)),s(i,"rt",h),s(i,"env",f),s(i,"file",v),s(i,"net",w),s(i,"web",g),s(i,"util",E),i);export{_ as WingBlade};
