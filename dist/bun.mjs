// Copyright (c) Lightingale WingBlade Author(s) 2023.
// Licensed under GNU LGPL 3.0 or later.
"use strict";import os from"node:os";import dns from"node:dns";let T=Object.defineProperty;let N=(e,t,r)=>t in e?T(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;let s=(e,t,r)=>(N(e,typeof t!="symbol"?t+"":t,r),r);let h=class{constructor(e,t="granted"){if(!e)throw new TypeError(`The provided value "${e}" is not a valid permission name.`);this.name=e,this.state=t}};let B={query:async e=>new h(e?.name),request:async e=>new h(e?.name),revoke:async e=>new h(e?.name),querySync:e=>new h(e?.name),requestSync:e=>new h(e?.name),revokeSync:e=>new h(e?.name)},a,v=(a=class{static get memory(){let{rss:e,heapTotal:t,heapUsed:r,external:u}=process.memoryUsage(),c=os.totalmem(),f=os.freemem();return{rss:e,heapTotal:t,heapUsed:r,external:u,total:c,free:f}}static exit(e=0){process.exit(e)}},s(a,"os",process.platform),s(a,"variant","Bun"),s(a,"version",Bun.version),s(a,"persist",!0),s(a,"networkDefer",!1),s(a,"cores",os.cpus().length),s(a,"perms",B),a),d="delete,get,has,set,toObject".split(","),m=new Proxy({get:(e,t)=>Bun.env[e]||t,set:(e,t)=>{Bun.env[e]=t},delete:e=>{delete Bun.env[e]},has:e=>!!Bun.env[e],toObject:()=>Bun.env},{get:(e,t)=>d.indexOf(t)<0&&t.constructor==String?e.get(t):e[t],set:(e,t,r)=>{if(d.indexOf(t)<0)if(t.constructor==String)e.set(t,r);else throw new TypeError("Invalid type for key");else throw new Error("Tried to write protected properties")},has:(e,t)=>d.indexOf(t)<0?t.constructor==String?e.has(t):e[t]!=null:!1,deleteProperty:(e,t)=>{if(d.indexOf(t)<0)if(t.constructor==String)e.delete(t);else throw new TypeError("Invalid type for key");else throw new Error("Tried to delete protected properties")}});let k=class{static async read(e,t){return new Uint8Array(await Bun.file(e).arrayBuffer())}static async write(e,t,r){await Bun.write(e,t)}},g=k;let L=class extends EventTarget{#e;#s;#n;#o;#l;#u;#h;#i;#a=[];#r=[];#t=3;#c=!1;CONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3;get protocol(){return this.#e}get hostname(){return this.#s}get port(){return this.#n}get readyState(){return this.#t}get source(){return this.#h}get sink(){return this.#i}addEventListener(e,t,r){e=="open"&&this.readyState==this.OPEN&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}send(e){if(this.#c)throw new Error("Cannot enqueue or send data on a freed connection");this.#t!=1?this.#a.push(e):this.#i?.desiredSize<0||this.#r.length?(this.#r.push(e),this.#i.ready.then(()=>{let t=this.#r.shift();t&&this.#i.write(t)})):this.#i.write(e)}async connect(){if(this.#c)throw new Error("Cannot restart a freed connection");switch(this.#t<this.CLOSING&&console.debug(`${this.#e.toUpperCase()} connection is already open.`),this.#t=this.CONNECTING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#t=this.OPEN,this.dispatchEvent(new Event("open"))}close(){switch(this.#t>this.OPEN&&console.debug(`${this.#e.toUpperCase()} connection is already closed.`),this.#t=this.CLOSING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#t=this.CLOSED,this.dispatchEvent(new Event("close"))}free(){return this.close(),this.#c=!0,this.#a.splice(0,this.#a.length)}constructor({proto:e,host:t,port:r},u){super(),e=e||"tcp",t=t||"127.0.0.1",r=r||80,this.#e=e,this.#s=t,this.#n=r,this.addEventListener("open",async()=>{this.#a.forEach(c=>{this.send(c)})}),this.addEventListener("close",()=>{this.#r.length&&this.#a.splice(0,0,this.#r.splice(0,this.#r.length))}),u&&this.connect()}},w,P=(w=class{},s(w,"RawClient",L),w),y=P;let E='<!DOCTYPE html><head><meta charset="utf-8"/><title>WingBlade error</title><style>body{background:#000;color:#ccc;}</style></head><body><div style="width:75vw;min-width:360px;max-width:1080px;margin:0 auto;"><p>WingBlade has encountered an error on ${runtime}.</p><pre>${stackTrace}</pre></div></body>\n';let M=class extends EventTarget{#e;#s;#n=!1;#o=[];#l={open:[],message:[],error:[],close:[]};addEventListener(e,t,r){e=="open"&&this.readyState<2&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}get binaryType(){return this.#e?.binaryType||""}get bufferedAmount(){return this.#e?.bufferedAmount||0}get extensions(){return this.#e?.extensions||""}get readyState(){return this.#e?.readyState||0}get url(){return this.#e?.url||this.#s}attach(e){if(this.#n)return!1;if(this.#e)throw new Error("Already attached a WebSocket object");this.#e=e;let t=this;switch(e.readyState){case 0:case 1:{t.dispatchEvent(new Event("open"));break}case 2:case 3:{t.dispatchEvent(new Event("close"));break}}}close(...e){return this.#n=!0,this.#e?.close(...e)}send(e){return this.#e?this.#e.send(e):(this.#o.push(e),e.length||e.size||e.byteLength||0)}constructor(e){super(),this.#s=e.url.replace("http","ws"),this.addEventListener("open",t=>{for(;this.#o.length>0;)this.#e.send(this.#o.shift())})}},A=class{static serve(e,t={}){let r=`${process.cwd()}`,u=t.port||8e3,c=t.hostname||"0.0.0.0",f=Bun.serve({port:u,hostname:c,fetch:async(n,l)=>{n.socket=l;try{let i=await e(n);return i?.constructor!=Response&&(i=new Response(JSON.stringify(i),{headers:{"Content-Type":"text/plain"}})),i}catch(i){let p=i.stack.split(`
`);return p.forEach((C,O,$)=>{$[O]=C.replace("@"," at ").replace("[native code]","bun:internal")}),p.unshift(`${i.name||"Error"}${i.message?":":""} ${i.message||""}`),p=p.join(`
    `),console.error(`Request error at ${n.method} ${n.url}
${p}`),new Response(E.replace("${runtime}",WingBlade.rt.variant).replace("${stackTrace}",p.replaceAll(r,"wingblade:app")),{status:502,headers:{"Content-Type":"text/html"}})}},websocket:{open(n){let l=n.data.wsServer;l.attach(n),l.dispatchEvent(new Event("open"))},message(n,l){n.data.wsServer.dispatchEvent(new MessageEvent("message",{data:l}))},close(n,l,i){n.data.wsServer.dispatchEvent(new Event("close"))}}});return console.error(`WingBlade serving at http://${c=="0.0.0.0"?"127.0.0.1":c}:${u}`),f}static acceptWs(e,t){let r=new M(e);return e.socket.upgrade(e,{data:{wsServer:r}}),{socket:r,response:new Response(null,{status:200})}}},S=A;let R=class{static randomInt(e){return Math.floor(Math.random()*e)}static async sleep(e,t=0){await Bun.sleep(e+Math.floor(t*Math.random()))}},b=R;let x=function(e){self.navigator||(self.navigator={});let t=navigator;switch(t.userAgent||(t.userAgent=`${e.rt.variant}/${e.rt.version}`),t.language||(t.language=null),t.languages?.constructor||(t.languages=[]),t.hardwareConcurrency||(t.hardwareConcurrency=e.rt.cores),t.deviceMemory||(t.deviceMemory=Math.min(2**Math.round(Math.log2(e.rt.memory.total/1073741824)),8)),t.permissions||(t.permissions={query:r=>e.rt.perms.querySync(r)}),e.rt.variant){case"Node":case"Bun":break;case"Deno":break}};let o,j=(o=class{},s(o,"args",Bun.argv.slice(2)),s(o,"rt",v),s(o,"env",m),s(o,"file",g),s(o,"net",y),s(o,"web",S),s(o,"util",b),o);x(j);export{j as WingBlade};
