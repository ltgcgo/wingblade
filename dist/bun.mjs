var B=Object.defineProperty;var C=(e,t,s)=>t in e?B(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var r=(e,t,s)=>(C(e,typeof t!="symbol"?t+"":t,s),s);var c,f=(c=class{static get memUsed(){return process.memoryUsage()}static exit(e=0){process.exit(e)}},r(c,"os",process.platform),r(c,"variant","Bun"),r(c,"version",Bun.version),r(c,"persist",!0),r(c,"networkDefer",!1),c),u="delete,get,has,set,toObject".split(","),w=new Proxy({get:(e,t)=>Bun.env[e]||t,set:(e,t)=>{Bun.env[e]=t},delete:e=>{delete Bun.env[e]},has:e=>!!Bun.env[e],toObject:()=>Bun.env},{get:(e,t)=>u.indexOf(t)<0&&t.constructor==String?e.get(t):e[t],set:(e,t,s)=>{if(u.indexOf(t)<0)if(t.constructor==String)e.set(t,s);else throw new TypeError("Invalid type for key");else throw new Error("Tried to write protected properties")},has:(e,t)=>u.indexOf(t)<0?t.constructor==String?e.has(t):e[t]!=null:!1,deleteProperty:(e,t)=>{if(u.indexOf(t)<0)if(t.constructor==String)e.delete(t);else throw new TypeError("Invalid type for key");else throw new Error("Tried to delete protected properties")}});var $=class{static async read(e,t){return new Uint8Array(await Bun.file(e).arrayBuffer())}static async write(e,t,s){await Bun.write(e,t)}},v=$;var T=class extends EventTarget{#e;#r;#n;#o;#h;#d;#l;#i;#a=[];#s=[];#t=3;#c=!1;CONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3;get protocol(){return this.#e}get hostname(){return this.#r}get port(){return this.#n}get readyState(){return this.#t}get source(){return this.#l}get sink(){return this.#i}addEventListener(e,t,s){e=="open"&&this.readyState==this.OPEN&&t.call(this,new Event("open")),super.addEventListener(e,t,s)}send(e){if(this.#c)throw new Error("Cannot enqueue or send data on a freed connection");this.#t!=1?this.#a.push(e):this.#i?.desiredSize<0||this.#s.length?(this.#s.push(e),this.#i.ready.then(()=>{let t=this.#s.shift();t&&this.#i.write(t)})):this.#i.write(e)}async connect(){if(this.#c)throw new Error("Cannot restart a freed connection");switch(this.#t<this.CLOSING&&console.debug(`${this.#e.toUpperCase()} connection is already open.`),this.#t=this.CONNECTING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#t=this.OPEN,this.dispatchEvent(new Event("open"))}close(){switch(this.#t>this.OPEN&&console.debug(`${this.#e.toUpperCase()} connection is already closed.`),this.#t=this.CLOSING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#t=this.CLOSED,this.dispatchEvent(new Event("close"))}free(){return this.close(),this.#c=!0,this.#a.splice(0,this.#a.length)}constructor({proto:e,host:t,port:s},d){super(),e=e||"tcp",t=t||"127.0.0.1",s=s||80,this.#e=e,this.#r=t,this.#n=s,this.addEventListener("open",async()=>{this.#a.forEach(l=>{this.send(l)})}),this.addEventListener("close",()=>{this.#s.length&&this.#a.splice(0,0,this.#s.splice(0,this.#s.length))}),d&&this.connect()}},p,N=(p=class{},r(p,"RawClient",T),p),g=N;var E='<!DOCTYPE html><head><meta charset="utf-8"/><title>WingBlade error</title><style>body{background:#000;color:#ccc;}</style></head><body><div style="width:75vw;min-width:360px;max-width:1080px;margin:0 auto;"><p>WingBlade has encountered an error on ${runtime}.</p><pre>${stackTrace}</pre></div></body>\n';var I=class extends EventTarget{#e;#r;#n=!1;#o=[];#h={open:[],message:[],error:[],close:[]};addEventListener(e,t,s){e=="open"&&this.readyState<2&&t.call(this,new Event("open")),super.addEventListener(e,t,s)}get binaryType(){return this.#e?.binaryType||""}get bufferedAmount(){return this.#e?.bufferedAmount||0}get extensions(){return this.#e?.extensions||""}get readyState(){return this.#e?.readyState||0}get url(){return this.#e?.url||this.#r}attach(e){if(this.#n)return!1;if(this.#e)throw new Error("Already attached a WebSocket object");this.#e=e;let t=this;switch(e.readyState){case 0:case 1:{t.dispatchEvent(new Event("open"));break}case 2:case 3:{t.dispatchEvent(new Event("close"));break}}}close(...e){return this.#n=!0,this.#e?.close(...e)}send(e){return this.#e?this.#e.send(e):(this.#o.push(e),e.length||e.size||e.byteLength||0)}constructor(e){super(),this.#r=e.url.replace("http","ws"),this.addEventListener("open",t=>{for(;this.#o.length>0;)this.#e.send(this.#o.shift())})}},k=class{static serve(e,t={}){let s=`${process.cwd()}`,d=t.port||8e3,l=t.hostname||"0.0.0.0",b=Bun.serve({port:d,hostname:l,fetch:async(n,o)=>{n.socket=o;try{let i=await e(n);return i?.constructor!=Response&&(i=new Response(JSON.stringify(i),{headers:{"Content-Type":"text/plain"}})),i}catch(i){let h=i.stack.split(`
`);return h.forEach((S,x,O)=>{O[x]=S.replace("@"," at ").replace("[native code]","bun:internal")}),h.unshift(`${i.name||"Error"}${i.message?":":""} ${i.message||""}`),h=h.join(`
    `),console.error(`Request error at ${n.method} ${n.url}
${h}`),new Response(E.replace("${runtime}",WingBlade.rt.variant).replace("${stackTrace}",h.replaceAll(s,"wingblade:app")),{status:502,headers:{"Content-Type":"text/html"}})}},websocket:{open(n){let o=n.data.wsServer;o.attach(n),o.dispatchEvent(new Event("open"))},message(n,o){n.data.wsServer.dispatchEvent(new MessageEvent("message",{data:o}))},close(n,o,i){n.data.wsServer.dispatchEvent(new Event("close"))}}});return console.error(`WingBlade serving at http://${l=="0.0.0.0"?"127.0.0.1":l}:${d}`),b}static acceptWs(e,t){let s=new I(e);return e.socket.upgrade(e,{data:{wsServer:s}}),{socket:s,response:new Response(null,{status:200})}}},m=k;var P=class{static randomInt(e){return Math.floor(Math.random()*e)}static async sleep(e,t=0){await Bun.sleep(e+Math.floor(t*Math.random()))}},y=P;var a,se=(a=class{},r(a,"args",Bun.argv.slice(2)),r(a,"rt",f),r(a,"env",w),r(a,"file",v),r(a,"net",g),r(a,"web",m),r(a,"util",y),a);export{se as WingBlade};
