// Copyright (c) Lightingale WingBlade Author(s) 2023.
// Licensed under GNU LGPL 3.0 or later.
"use strict";import os from"node:os";import dns from"node:dns";let M=Object.defineProperty;let P=(e,t,r)=>t in e?M(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;let n=(e,t,r)=>(P(e,typeof t!="symbol"?t+"":t,r),r);let m=class{constructor(e,t="granted"){if(!e)throw new TypeError(`The provided value "${e}" is not a valid permission name.`);this.name=e,this.state=t}};let U={query:async e=>new m(e?.name),request:async e=>new m(e?.name),revoke:async e=>new m(e?.name),querySync:e=>new m(e?.name),requestSync:e=>new m(e?.name),revokeSync:e=>new m(e?.name)},u,T=(u=class{static get memory(){let{rss:e,heapTotal:t,heapUsed:r,external:s}=process.memoryUsage(),i=os.totalmem(),c=os.freemem();return{rss:e,heapTotal:t,heapUsed:r,external:s,total:i,free:c}}static exit(e=0){process.exit(e)}},n(u,"os",process.platform),n(u,"variant","Bun"),n(u,"version",Bun.version),n(u,"versions",{deno:process.versions.node,v8:process.versions.v8.split("-")[0],wingblade:props.version}),n(u,"persist",!0),n(u,"networkDefer",!1),n(u,"cores",os.cpus().length),n(u,"perms",U),u),y="delete,get,has,set,toObject".split(","),x=new Proxy({get:(e,t)=>Bun.env[e]||t,set:(e,t)=>{Bun.env[e]=t},delete:e=>{delete Bun.env[e]},has:e=>!!Bun.env[e],toObject:()=>Bun.env},{get:(e,t)=>y.indexOf(t)<0&&t.constructor==String?e.get(t):e[t],set:(e,t,r)=>{if(y.indexOf(t)<0)if(t.constructor==String)e.set(t,r);else throw new TypeError("Invalid type for key");else throw new Error("Tried to write protected properties")},has:(e,t)=>y.indexOf(t)<0?t.constructor==String?e.has(t):e[t]!=null:!1,deleteProperty:(e,t)=>{if(y.indexOf(t)<0)if(t.constructor==String)e.delete(t);else throw new TypeError("Invalid type for key");else throw new Error("Tried to delete protected properties")}});let I=class{static async read(e,t){return new Uint8Array(await Bun.file(e).arrayBuffer())}static async write(e,t,r){await Bun.write(e,t)}},C=I;let j=class extends EventTarget{#e;#r;#t;#a;#l;#h;#c;#s;#o=[];#i=[];#n=3;#u=!1;CONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3;get protocol(){return this.#e}get hostname(){return this.#r}get port(){return this.#t}get readyState(){return this.#n}get source(){return this.#c}get sink(){return this.#s}addEventListener(e,t,r){e=="open"&&this.readyState==this.OPEN&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}send(e){if(this.#u)throw new Error("Cannot enqueue or send data on a freed connection");this.#n!=1?this.#o.push(e):this.#s?.desiredSize<0||this.#i.length?(this.#i.push(e),this.#s.ready.then(()=>{let t=this.#i.shift();t&&this.#s.write(t)})):this.#s.write(e)}async connect(){if(this.#u)throw new Error("Cannot restart a freed connection");switch(this.#n<this.CLOSING&&console.debug(`${this.#e.toUpperCase()} connection is already open.`),this.#n=this.CONNECTING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#n=this.OPEN,this.dispatchEvent(new Event("open"))}close(){switch(this.#n>this.OPEN&&console.debug(`${this.#e.toUpperCase()} connection is already closed.`),this.#n=this.CLOSING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#n=this.CLOSED,this.dispatchEvent(new Event("close"))}free(){return this.close(),this.#u=!0,this.#o.splice(0,this.#o.length)}constructor({proto:e,host:t,port:r},s){super(),e=e||"tcp",t=t||"127.0.0.1",r=r||80,this.#e=e,this.#r=t,this.#t=r,this.addEventListener("open",async()=>{this.#o.forEach(i=>{this.send(i)})}),this.addEventListener("close",()=>{this.#i.length&&this.#o.splice(0,0,this.#i.splice(0,this.#i.length))}),s&&this.connect()}},S,q=(S=class{},n(S,"RawClient",j),S),B=q;let L='<!DOCTYPE html><head><meta charset="utf-8"/><title>WingBlade error</title><style>body{background:#000;color:#ccc;}</style></head><body><div style="width:75vw;min-width:360px;max-width:1080px;margin:0 auto;"><p>WingBlade has encountered an error on ${runtime}.</p><pre>${stackTrace}</pre></div></body>\n';let G=class extends EventTarget{#e;#r;#t=!1;#a=[];#l={open:[],message:[],error:[],close:[]};addEventListener(e,t,r){e=="open"&&this.readyState<2&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}get binaryType(){return this.#e?.binaryType||""}get bufferedAmount(){return this.#e?.bufferedAmount||0}get extensions(){return this.#e?.extensions||""}get readyState(){return this.#e?.readyState||0}get url(){return this.#e?.url||this.#r}attach(e){if(this.#t)return!1;if(this.#e)throw new Error("Already attached a WebSocket object");this.#e=e;let t=this;switch(e.readyState){case 0:case 1:{t.dispatchEvent(new Event("open"));break}case 2:case 3:{t.dispatchEvent(new Event("close"));break}}}close(...e){return this.#t=!0,this.#e?.close(...e)}send(e){return this.#e?this.#e.send(e):(this.#a.push(e),e.length||e.size||e.byteLength||0)}constructor(e){super(),this.#r=e.url.replace("http","ws"),this.addEventListener("open",t=>{for(;this.#a.length>0;)this.#e.send(this.#a.shift())})}},W=class{static serve(e,t={}){let r=`${process.cwd()}`,s=t.port||8e3,i=t.hostname||"0.0.0.0",c=Bun.serve({port:s,hostname:i,fetch:async(a,d)=>{a.socket=d;try{let o=await e(a);return o?.constructor!=Response&&(o=new Response(JSON.stringify(o),{headers:{"Content-Type":"text/plain"}})),o}catch(o){let p=o.stack.split(`
`);return p.forEach((v,f,g)=>{g[f]=v.replace("@"," at ").replace("[native code]","bun:internal")}),p.unshift(`${o.name||"Error"}${o.message?":":""} ${o.message||""}`),p=p.join(`
    `),console.error(`Request error at ${a.method} ${a.url}
${p}`),new Response(L.replace("${runtime}",WingBlade.rt.variant).replace("${stackTrace}",p.replaceAll(r,"wingblade:app")),{status:502,headers:{"Content-Type":"text/html"}})}},websocket:{open(a){let d=a.data.wsServer;d.attach(a),d.dispatchEvent(new Event("open"))},message(a,d){a.data.wsServer.dispatchEvent(new MessageEvent("message",{data:d}))},close(a,d,o){a.data.wsServer.dispatchEvent(new Event("close"))}}});return console.error(`WingBlade serving at http://${i=="0.0.0.0"?"127.0.0.1":i}:${s}`),c}static acceptWs(e,t){let r=new G(e);return e.socket.upgrade(e,{data:{wsServer:r}}),{socket:r,response:new Response(null,{status:200})}}},O=W;let z=class{static randomInt(e){return Math.floor(Math.random()*e)}static async sleep(e,t=0){await Bun.sleep(e+Math.floor(t*Math.random()))}},k=z;if(self.ReadableStream)ReadableStream.prototype.array=function(){return Bun.readableStreamToArray(this)},ReadableStream.prototype.arrayBuffer=function(){return Bun.readableStreamToArrayBuffer(this)},ReadableStream.prototype.blob=function(){return Bun.readableStreamToBlob(this)},ReadableStream.prototype.json=function(){return Bun.readableStreamToJSON(this)},ReadableStream.prototype.text=function(){return Bun.readableStreamToText(this)};else throw"ReadableStream not present in this runtime.";let J=class{#e=!1;#r;#t;resolve(t){let r=this;r.resolved||(r.#e=!0,r.#r=t,r.#t&&(r.#t(t),r.#t=void 0))}wait(){let t=this;return t.#e?new Promise(r=>{r(t.#r)}):new Promise(r=>{t.#t=r})}},Q=class{#e=256;#r=0;#t;#a;#l;#h;#c;#s=new J;alwaysCopy=!1;get chunk(){return this.#e}get sink(){return this.#t}get source(){return this.#l}attach(t){let r=this;r.#t=t,r.#a=t.getReader(),r.#s.resolve()}constructor(t=1024,r=!1){let s=this;s.#e=t,s.alwaysCopy=r,s.#c=new ByteLengthQueuingStrategy({highWaterMark:t});let i=0,c;s.#l=new ReadableStream({cancel:async a=>{await s.#t.cancel(a)},start:async a=>{},pull:async a=>{s.#r++;let d=!1;await s.#s.wait();let o=!0,p=0;for(;o&&p<s.#e;){let{done:v,value:f}=await s.#a.read(),g=f?.byteLength||0;p+=g;let A=0,l,E=!0;if(f?.byteLength)for(l=new Uint8Array(f.buffer,f.byteOffset,f.byteLength);E;){let w;if(l.byteLength<1&&(E=!1),i){let b=l.subarray(0,s.#e-i);c.set(b,i),i+b.byteLength<s.#e?i+=l.byteLength:(w=c,i=0,c=new Uint8Array(s.#e)),l=l.subarray(b.byteLength)}else l.byteLength<s.#e?(i=l.byteLength,c?.constructor!=Uint8Array&&(c=new Uint8Array(s.#e)),c.set(l)):s.alwaysCopy?(w=new Uint8Array(s.#e),w.set(l.subarray(0,s.#e))):w=l.subarray(0,s.#e),l=l.subarray(s.#e);w&&(a.enqueue(new Uint8Array(w)),A+=w?.byteLength)}v&&(i&&a.enqueue(c.subarray(0,i)),a.close(),o=!1)}}},this.#c)}},$=Q;let N=function(e){self.navigator||(self.navigator={});let t=navigator;switch(t.userAgent||(t.userAgent=`${e.rt.variant}/${e.rt.version}`),t.language||(t.language=null),t.languages?.constructor||(t.languages=[]),t.hardwareConcurrency||(t.hardwareConcurrency=e.rt.cores),t.deviceMemory||(t.deviceMemory=Math.min(2**Math.round(Math.log2(e.rt.memory.total/1073741824)),8)),t.permissions||(t.permissions={query:r=>e.rt.perms.querySync(r)}),e.rt.variant){case"Node":case"Bun":break;case"Deno":break}};self.ChokerStream=$;let R={version:"0.1"};let h,H=(h=class{},n(h,"args",Bun.argv.slice(2)),n(h,"version",R.version),n(h,"rt",T),n(h,"env",x),n(h,"file",C),n(h,"net",B),n(h,"web",O),n(h,"util",k),h);N(H);export{H as WingBlade};
