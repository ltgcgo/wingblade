// Copyright (c) Lightingale WingBlade Author(s) 2023.
// Licensed under GNU LGPL 3.0 or later.
"use strict";let fe=Object.defineProperty;let pe=(t,e,r)=>e in t?fe(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;let i=(t,e,r)=>(pe(t,typeof e!="symbol"?e+"":e,r),r),X=(t,e,r)=>{if(!e.has(t))throw TypeError("Cannot "+r)};let d=(t,e,r)=>(X(t,e,"read from private field"),r?r.call(t):e.get(t)),f=(t,e,r)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,r)},D=(t,e,r,s)=>(X(t,e,"write to private field"),s?s.call(t,r):e.set(t,r),r);let q={args:Deno.args,main:Deno.mainModule};let x={version:"0.1"};let ye={query:t=>Deno.permissions.query(t),request:t=>Deno.permissions.request(t),revoke:t=>Deno.permissions.revoke(t),querySync:t=>Deno.permissions.querySync(t),requestSync:t=>Deno.permissions.requestSync(t),revokeSync:t=>Deno.permissions.revokeSync(t)},h,J=(h=class{static get memory(){let{rss:t,heapTotal:e,heapUsed:r,external:s}=Deno.memoryUsage(),{total:n,free:a}=Deno.systemMemoryInfo();return{rss:t,heapTotal:e,heapUsed:r,external:s,total:n,free:a}}static exit(t=0){Deno.exit(t)}static ifMap(){let t={},e=Deno.networkInterfaces();for(let r=0;r<e.length;r++){let{family:s,name:n,address:a,netmask:c,scopeid:o,cidr:l,mac:u}=e[r];t[n]||(t[n]=[]),u=="00:00:00:00:00:00"&&(u=void 0),t[n].push({address:a,cidr:l,netmask:c,family:s,mac:u,scope_id:o})}return t}},i(h,"os",Deno.build.os),i(h,"variant","Deno"),i(h,"version",Deno.version.deno),i(h,"versions",{deno:Deno.version.deno,v8:Deno.version.v8,wingblade:x.version}),i(h,"persist",!0),i(h,"networkDefer",!1),i(h,"cores",8),i(h,"perms",ye),i(h,"noColor",Deno.noColor),i(h,"pid",Deno.pid),i(h,"ppid",Deno.ppid),i(h,"chdir",Deno.chdir),i(h,"cwd",Deno.cwd),i(h,"execPath",Deno.execPath()),i(h,"gid",Deno.gid),i(h,"hostname",Deno.hostname),i(h,"interfaces",Deno.networkInterfaces),i(h,"loadavg",Deno.loadavg),i(h,"memoryUsage",Deno.memoryUsage),i(h,"osUptime",Deno.uptime),i(h,"systemMemoryInfo",Deno.systemMemoryInfo),i(h,"uid",Deno.uid),h),M="delete,get,has,set,toObject".split(","),Q=new Proxy({get:(t,e)=>Deno.env.get(t)||e,set:(t,e)=>{Deno.env.set(t,e)},delete:t=>{Deno.env.delete(t)},has:t=>Deno.env.has(t),toObject:()=>Deno.env.toObject()},{get:(t,e)=>M.indexOf(e)<0&&e.constructor==String?t.get(e):t[e],set:(t,e,r)=>{if(M.indexOf(e)<0)if(e.constructor==String)t.set(e,r);else throw new TypeError("Invalid type for key");else throw new Error("Tried to write protected properties")},has:(t,e)=>M.indexOf(e)<0?e.constructor==String?t.has(e):t[e]!=null:!1,deleteProperty:(t,e)=>{if(M.indexOf(e)<0)if(e.constructor==String)t.delete(e);else throw new TypeError("Invalid type for key");else throw new Error("Tried to delete protected properties")}});let we=Symbol("cc.ltgc.wingblade:internal.file"),Z=t=>we==t;let ee="auto,POSIX,DOS,URL".split(",");let w,H,R,P,k,O,C,V,j,K,I,W,_,Y,v,L,T,A,F,$,g=(w=class extends EventTarget{constructor(e="",r={}){f(this,H,!1);f(this,R,-1);f(this,P,0);f(this,k,0);f(this,O,-1);f(this,C,void 0);f(this,V,-1);f(this,j,[]);f(this,K,void 0);f(this,I,void 0);f(this,W,void 0);f(this,_,void 0);f(this,Y,void 0);f(this,v,void 0);f(this,L,void 0);f(this,T,void 0);f(this,A,void 0);f(this,F,void 0);f(this,$,void 0);i(this,"readTextFileSync",this.readTextSync);i(this,"realPathSync",this.resolveSync);i(this,"renameSync",this.mvSync);i(this,"rmSync",this.removeSync);i(this,"touchSync",this.createSync);i(this,"moveToSync",this.mvSync);let s=Z(r?.token),n=this;n.type=r?.type||"",n.name=r?.name,D(n,v,r?.mtimeMs||r?.modified||r?.lastModified||NaN),D(n,L,r?.birthTimeMs||r?.created||NaN),D(n,T,r?.atimeMs||r?.accessed||NaN),s&&(D(n,C,r?.root),D(n,k,r?.start||0),D(n,O,r?.end||-1)),r?.open}get type(){return d(this,F)}get name(){return d(this,$)}get kind(){return d(this,A)}get size(){return d(this,C)?d(this,O)-d(this,k):d(this,R)}get offset(){return d(this,P)-d(this,k)}get lastModified(){return d(this,v)}get modified(){return d(this,v)}get mtimeMs(){return d(this,v)}get mtime(){return new Date(d(this,v))}get accessed(){return d(this,T)}get atimeMs(){return d(this,T)}get atime(){return new Date(d(this,T))}get created(){return d(this,L)}get birthTimeMs(){return d(this,L)}get birthTime(){return new Date(d(this,L))}get watched(){return!!d(this,I)}openSync(){}watch(){}unwatch(){}readAutoSync(e=0){}readDirSync(){}readFileSync(){}readLinkSync(){}readTextSync(){}writeFileSync(){}writeTextSync(){}statSync(){}lstatSync(){}chmodSync(){}chownSync(){}createSync(e){}mkdirSync(){}mvSync(e){}resolveSync(){}removeSync(){}truncateSync(){}uTimeSync(){}copyFromSync(e,r){}copyToSync(e,r){}linkFromSync(e,r){}linkToSync(e,r){}moveFromSync(e){}symlinkFromSync(e,r){}symlinkToSync(e,r){}close(e){}slice(e=0,r,s=""){let n=this;r?.constructor||(r=d(n,O))}stream(){}readSync(){}seekSync(){}writeSync(){}async open(){}async blob(){}async text(){}async json(){}async arrayBuffer(){}},H=new WeakMap,R=new WeakMap,P=new WeakMap,k=new WeakMap,O=new WeakMap,C=new WeakMap,V=new WeakMap,j=new WeakMap,K=new WeakMap,I=new WeakMap,W=new WeakMap,_=new WeakMap,Y=new WeakMap,v=new WeakMap,L=new WeakMap,T=new WeakMap,A=new WeakMap,F=new WeakMap,$=new WeakMap,i(w,"BLOB",1),i(w,"FILE",1),i(w,"FOLDER",2),i(w,"DIRECTORY",2),i(w,"SYMLINK",3),i(w,"SOCKET",4),i(w,"FIFO",5),i(w,"NAMEDPIPE",5),i(w,"BLOCKDEV",6),i(w,"CHARDEV",7),w),p,me=(p=class{static async read(t,e){return await Deno.readFile(t,e)}static async write(t,e,r){await Deno.writeFile(t,e,r)}static get variant(){return Deno.build.os=="windows"?this.DOS:this.POSIX}static detect(t){let e=this,r=t.charCodeAt(0);if(t[1]==":"&&r>64&&r<91||t.indexOf("\\")>-1&&t.indexOf("/")<0)return e.DOS;try{let s=new URL(t);return e.URL}catch{return e.POSIX}}static delimiter(t){return" /\\/"[t||this.variant]}static basename(t,e){let r=t.split(this.delimiter(this.detect(t))).pop();return e?r.replace(e,""):r}static expand(t,e){t||(t=Deno.cwd())}static resolve(t="./"){Deno.realPathSync(t)}static normalize(t,e){let r=this,s=r.detect(t),n=r.delimiter(s);e||(e=s);let a=r.delimiter(e),c=a.repeat(2);for(;t.indexOf(c)>-1;)t=t.replace(c,delim);let o=t.split(n);switch(s){case r.POSIX:case r.DOS:{switch(o[0]){case"":case".":case"..":break;default:s==r.DOS&&o[0].length==2&&o[0][1]==":"||o.unshift(".")}break}}if(n=="\\"&&a=="/"&&o[0][1]==":"&&(o[0]==r.fakeDOS?o[0]="":(o[0]=o[0][0].toLowerCase(),o.splice(0,0,...r.fakePosix))),n=="/"&&a=="\\"){let l=!0;if(o[r.fakePosix.length]?.length==1){let u=0;r.fakePosix.forEach((E,S)=>{o[S]==E&&u++}),u==r.fakePosix.length&&(l=!1,o.splice(0,r.fakePosix.length),o[0]=`${o[0].toUpperCase()}:`)}if(l)switch(o[0]){case".":case"..":break;default:o[0]=r.fakeDOS}}for(let l=o.length-1;l>0;l--)switch(o[l]){case"..":{o.splice(l-1,2),l--;break}case".":{o.splice(l,1);break}}return o.join(a)}static isAbsolute(t){switch(this.normalize(t).split(this.delimiter(this.detect(t)))[0]){case".":case"..":return!0;default:return!1}}static relative(t,e){let r=this;t=r.normalize(t||Deno.cwd()),e=r.normalize(e||Deno.cwd());let s=r.detect(t),n=r.detect(e);if(n!=s)throw new SyntaxError(`Cannot mix a ${ee[n]} path with a ${ee[s]} path`);let a=r.delimiter(s),c=t.split(a),o=e.split(a);if(s==r.DOS&&c[0]!=o[0])throw new Error("Cannot switch between different drives on DOS");let l=0;return c.forEach((u,E)=>{u==o[E]&&l++}),`${`..${a}`.repeat(c.length-l)||`.${a}`}${o.slice(l).join(a)}`}},i(p,"POSIX",1),i(p,"DOS",2),i(p,"URL",3),i(p,"BLOB",g.FILE),i(p,"FILE",g.FILE),i(p,"FOLDER",g.FOLDER),i(p,"DIRECTORY",g.FOLDER),i(p,"SYMLINK",g.SYMLINK),i(p,"SOCKET",g.SOCKET),i(p,"FIFO",g.FIFO),i(p,"NAMEDPIPE",g.FIFO),i(p,"BLOCKDEV",g.BLOCKDEV),i(p,"CHARDEV",g.CHARDEV),i(p,"fakePosix","/mnt/windev".split("/")),i(p,"fakeDOS","Z:"),p),te=me;let ge=class extends EventTarget{#e;#t;#r;#s;#n;#a;#i;#o;#h=[];#l=[];#c=3;#d=!1;CONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3;get protocol(){return this.#e}get hostname(){return this.#t}get port(){return this.#r}get readyState(){return this.#c}get source(){return this.#i}get sink(){return this.#o}addEventListener(t,e,r){t=="open"&&this.readyState==this.OPEN&&e.call(this,new Event("open")),super.addEventListener(t,e,r)}send(t){if(this.#d)throw new Error("Cannot enqueue or send data on a freed connection");this.#c!=this.OPEN?this.#h.push(t):this.#o?.desiredSize<0||this.#l.length?(this.#l.push(t),this.#o.ready.then(()=>{let e=this.#l.shift();e&&this.#o.write(e)})):this.#o.write(t)}async connect(){if(this.#d)throw new Error("Cannot restart a freed connection");if(this.#c<this.CLOSING){console.debug(`${this.#e.toUpperCase()} connection is already open.`);return}switch(this.#c=this.CONNECTING,this.#e){case"tcp":{let t=await Deno.connect({hostname:this.#t,port:this.#r});this.#s=t,this.#n=t.readable,this.#i=t.readable.getReader(),this.#a=t.writable,this.#o=t.writable.getWriter();break}default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#c=this.OPEN,this.dispatchEvent(new Event("open")),(async()=>{try{let t=!0;for(;t;){let{value:e,done:r}=await this.#i.read();t=!r,e&&this.dispatchEvent(new MessageEvent("data",{data:e})),r&&this.close()}}catch(t){this.dispatchEvent(new ErrorEvent("error",{message:t.message,error:t})),this.close()}})()}close(){if(this.#c>this.OPEN){console.debug(`${this.#e.toUpperCase()} connection is already closed.`);return}switch(this.#c=this.CLOSING,this.#e){case"tcp":{let{rid:t}=this.#s;Deno.resources()[t]&&this.#s?.close();break}default:throw new Error(`Invalid protocol "${this.#e}"`)}this.#c=this.CLOSED,this.dispatchEvent(new Event("close"))}free(){return this.close(),this.#d=!0,this.#h.splice(0,this.#h.length)}constructor({proto:t,host:e,port:r},s){super(),t=t||"tcp",e=e||"127.0.0.1",r=r||80,this.#e=t,this.#t=e,this.#r=r,this.addEventListener("open",async()=>{this.#h.forEach(n=>{this.send(n)})}),this.addEventListener("close",()=>{this.#l.length&&this.#h.splice(0,0,this.#l.splice(0,this.#l.length))}),s&&this.connect()}},ve=class extends EventTarget{#e;#t;#r;#s;#n;#a;#i=1;OPEN=1;CLOSING=2;CLOSED=3;get ip(){return this.#e.hostname||"0.0.0.0"}get port(){return this.#e.port||0}get readyState(){return this.#i}get source(){return this.#n}get sink(){return this.#a}send(t){this.#i==1&&this.#a.write(t)}close(){this.#i=this.CLOSING,this.#t.close(),this.#i=this.CLOSED,this.dispatchEvent(new Event("close"))}addEventListener(t,e,r){t=="open"&&this.readyState==this.OPEN&&e.call(this,new Event("open")),super.addEventListener(t,e,r)}constructor(t){super(),this.#e=t.remoteAddr,this.#t=t,this.#r=t.readable,this.#n=t.readable.getReader(),this.#s=t.writable,this.#a=t.writable.getWriter(),(async()=>{let e=!0;for(;e;){let{value:r,done:s}=await this.#n.read();e=!s,r&&this.dispatchEvent(new MessageEvent("data",{data:r})),s&&this.close()}})()}},Ee=class extends EventTarget{#e;#t;#r;#s;#n;#a=!1;#i=!1;get active(){return this.#a}get proto(){return this.#e}get host(){return this.#t}get port(){return this.#r}get reuse(){return this.#s}async listen(){if(this.#i)throw new Error("Cannot restart a freed connection");if(this.#a){console.debug(`${this.#e.toUpperCase()} server on ${this.#t}:${this.#r} is already active.`);return}let t=this;try{switch(this.#e){case"tcp":{t.#n=Deno.listen({hostname:t.#t,port:t.#r,reusePort:t.#s}),t.dispatchEvent(new Event("listen"));for await(let e of t.#n.accept())t.dispatchEvent(new MessageEvent("accept"),{data:new ve(e)});break}default:throw t.free(),new Error(`Invalid protocol "${t.#e}"`)}}catch{this.dispatchEvent(new Event("close"))}}close(){if(!this.#a){console.debug(`${this.#e.toUpperCase()} server on ${this.#t}:${this.#r} is already closed.`);return}switch(this.#e){case"tcp":{this.#n?.close();break}}}free(){this.close(),this.#i=!0}constructor({proto:t,host:e,port:r,reuse:s},n){super(),t=t||"tcp",e=e||"0.0.0.0",r=r||8e3,this.#e=t,this.#t=e,this.#r=r,this.#s=s,this.addEventListener("listen",()=>{console.error(`WingBlade ${t.toUpperCase()} server listening on ${e}:${r}`)}),n&&this.listen()}},N,Se=(N=class{},i(N,"RawClient",ge),i(N,"RawServer",Ee),N),re=Se;function se(){let t,e="pending",r=new Promise((s,n)=>{t={async resolve(a){await a,e="fulfilled",s(a)},reject(a){e="rejected",n(a)}}});return Object.defineProperty(r,"state",{get:()=>e}),Object.assign(r,t)}function be(t,e={}){let{signal:r,persistent:s}=e;return r?.aborted?Promise.reject(new DOMException("Delay was aborted.","AbortError")):new Promise((n,a)=>{let c=()=>{clearTimeout(l),a(new DOMException("Delay was aborted.","AbortError"))},l=setTimeout(()=>{r?.removeEventListener("abort",c),n()},t);if(r?.addEventListener("abort",c,{once:!0}),s===!1)try{Deno.unrefTimer(l)}catch(u){if(!(u instanceof ReferenceError))throw u;console.error("`persistent` option is only available in Deno")}})}var ne=class{#e=0;#t=[];#r=[];#s=se();add(e){++this.#e,this.#n(e[Symbol.asyncIterator]())}async#n(e){try{let{value:r,done:s}=await e.next();s?--this.#e:this.#t.push({iterator:e,value:r})}catch(r){this.#r.push(r)}this.#s.resolve()}async*iterate(){for(;this.#e>0;){await this.#s;for(let e=0;e<this.#t.length;e++){let{iterator:r,value:s}=this.#t[e];yield s,this.#n(r)}if(this.#r.length){for(let e of this.#r)throw e;this.#r.length=0}this.#t.length=0,this.#s=se()}}[Symbol.asyncIterator](){return this.iterate()}},U="Server closed",De=5,Le=1e3,z=class{#e;#t;#r;#s=!1;#n=new Set;#a=new AbortController;#i=new Set;#o;constructor(e){this.#e=e.port,this.#t=e.hostname,this.#r=e.handler,this.#o=e.onError??function(r){return console.error(r),new Response("Internal Server Error",{status:500})}}async serve(e){if(this.#s)throw new Deno.errors.Http(U);this.#u(e);try{return await this.#c(e)}finally{this.#f(e);try{e.close()}catch{}}}async listenAndServe(){if(this.#s)throw new Deno.errors.Http(U);let e=Deno.listen({port:this.#e??80,hostname:this.#t??"0.0.0.0",transport:"tcp"});return await this.serve(e)}async listenAndServeTls(e,r){if(this.#s)throw new Deno.errors.Http(U);let s=Deno.listenTls({port:this.#e??443,hostname:this.#t??"0.0.0.0",certFile:e,keyFile:r,transport:"tcp"});return await this.serve(s)}close(){if(this.#s)throw new Deno.errors.Http(U);this.#s=!0;for(let e of this.#n)try{e.close()}catch{}this.#n.clear(),this.#a.abort();for(let e of this.#i)this.#d(e);this.#i.clear()}get closed(){return this.#s}get addrs(){return Array.from(this.#n).map(e=>e.addr)}async#h(e,r){let s;try{if(s=await this.#r(e.request,r),s.bodyUsed&&s.body!==null)throw new TypeError("Response body already consumed.")}catch(n){s=await this.#o(n)}try{await e.respondWith(s)}catch{}}async#l(e,r){for(;!this.#s;){let s;try{s=await e.nextRequest()}catch{break}if(s===null)break;this.#h(s,r)}this.#d(e)}async#c(e){let r;for(;!this.#s;){let s;try{s=await e.accept()}catch(c){if(c instanceof Deno.errors.BadResource||c instanceof Deno.errors.InvalidData||c instanceof Deno.errors.UnexpectedEof||c instanceof Deno.errors.ConnectionReset||c instanceof Deno.errors.NotConnected){r?r*=2:r=De,r>=1e3&&(r=Le);try{await be(r,{signal:this.#a.signal})}catch(o){if(!(o instanceof DOMException&&o.name==="AbortError"))throw o}continue}throw c}r=void 0;let n;try{n=Deno.serveHttp(s)}catch{continue}this.#p(n);let a={localAddr:s.localAddr,remoteAddr:s.remoteAddr};this.#l(n,a)}}#d(e){this.#y(e);try{e.close()}catch{}}#u(e){this.#n.add(e)}#f(e){this.#n.delete(e)}#p(e){this.#i.add(e)}#y(e){this.#i.delete(e)}};function Te(t){return t==="0.0.0.0"?"localhost":t}async function ie(t,e={}){let r=e.port??8e3,s=e.hostname??"0.0.0.0",n=new z({port:r,hostname:s,handler:t,onError:e.onError});e?.signal?.addEventListener("abort",()=>n.close(),{once:!0});let a=Deno.listen({port:r,hostname:s,transport:"tcp"}),c=n.serve(a);return r=n.addrs[0].port,"onListen"in e?e.onListen?.({port:r,hostname:s}):console.log(`Listening on http://${Te(s)}:${r}/`),await c}var ae='<!DOCTYPE html><head><meta charset="utf-8"/><title>WingBlade error</title><style>body{background:#000;color:#ccc;}</style></head><body><div style="width:75vw;min-width:360px;max-width:1080px;margin:0 auto;"><p>WingBlade has encountered an error on ${runtime}.</p><pre>${stackTrace}</pre></div></body>\n';let Oe=class{static serve(t,e={}){let r=`file://${Deno.cwd()}`;return e?.onListen||(e.onListen=function({port:s,hostname:n}){n=="0.0.0.0"&&(n="127.0.0.1"),console.error(`WingBlade serving at http://${n}:${s}`)}),e?.hostname||(e.hostname="0.0.0.0"),e?.port||(e.port=8e3),ie(async(s,n)=>{try{let a=await t(s,n);return a?.constructor==Response?a:new Response(JSON.stringify(a),{headers:{"Content-Type":"text/plain"}})}catch(a){return console.error(`Request error at ${s.method} ${s.url}
${a.stack}`),new Response(ae.replace("${runtime}",WingBlade.rt.variant).replace("${stackTrace}",a.stack.replaceAll(r,"wingblade:app")),{status:502,headers:{"Content-Type":"text/html"}})}},e)}static acceptWs(t,e){return Deno.upgradeWebSocket(t,e)}},oe=Oe;let Ce=class{static randomInt(t){return Math.floor(Math.random()*t)}static sleep(t,e=0){return new Promise(r=>{AbortSignal.timeout(t+Math.floor(e*Math.random())).addEventListener("abort",()=>{r()})})}},ce=Ce;if(self.ReadableStream)ReadableStream.prototype.array=async function(){let t=this.getReader(),e=[],r=!0;for(e.byteLength=0;r;){let{done:s,value:n}=await t.read();s&&(r=!1),n?.byteLength&&(e.push(new Uint8Array(n.buffer).subarray(n.byteOffset,n.byteLength)),e.byteLength+=n.byteLength)}return e},ReadableStream.prototype.arrayBuffer=async function(){let t=await this.array(),e=new Uint8Array(t.byteLength),r=0;return t.forEach(s=>{e.set(s,r),r+=s.byteLength}),e.buffer},ReadableStream.prototype.blob=async function(t="application/octet-stream"){return new Blob(await this.array(),{type:t})},ReadableStream.prototype.text=async function(t="utf-8"){let e=await this.arrayBuffer();return new TextDecoder(t,{fatal:!0}).decode(e)},ReadableStream.prototype.json=async function(t){return JSON.parse(await this.text(t))};else throw"ReadableStream not present in this runtime.";let xe=class{#e=!1;#t;#r;resolve(e){let r=this;r.resolved||(r.#e=!0,r.#t=e,r.#r&&(r.#r(e),r.#r=void 0))}wait(){let e=this;return e.#e?new Promise(r=>{r(e.#t)}):new Promise(r=>{e.#r=r})}},Me=class{#e=256;#t=0;#r;#s;#n;#a;#i;#o=new xe;alwaysCopy=!1;get chunk(){return this.#e}get sink(){return this.#r}get source(){return this.#n}attach(e){let r=this;r.#r=e,r.#s=e.getReader(),r.#o.resolve()}constructor(e=1024,r=!1){let s=this;s.#e=e,s.alwaysCopy=r,s.#i=new ByteLengthQueuingStrategy({highWaterMark:e});let n=0,a;s.#n=new ReadableStream({cancel:async c=>{await s.#r.cancel(c)},start:async c=>{},pull:async c=>{s.#t++;let o=!1;await s.#o.wait();let l=!0,u=0;for(;l&&u<s.#e;){let{done:E,value:S}=await s.#s.read(),de=S?.byteLength||0;u+=de;let ue=0,y,G=!0;if(S?.byteLength)for(y=new Uint8Array(S.buffer,S.byteOffset,S.byteLength);G;){let b;if(y.byteLength<1&&(G=!1),n){let B=y.subarray(0,s.#e-n);a.set(B,n),n+B.byteLength<s.#e?n+=y.byteLength:(b=a,n=0,a=new Uint8Array(s.#e)),y=y.subarray(B.byteLength)}else y.byteLength<s.#e?(n=y.byteLength,a?.constructor!=Uint8Array&&(a=new Uint8Array(s.#e)),a.set(y)):s.alwaysCopy?(b=new Uint8Array(s.#e),b.set(y.subarray(0,s.#e))):b=y.subarray(0,s.#e),y=y.subarray(s.#e);b&&(c.enqueue(new Uint8Array(b)),ue+=b?.byteLength)}E&&(n&&c.enqueue(a.subarray(0,n)),c.close(),l=!1)}}},this.#i)}},le=Me;let he=function(t){self.navigator||(self.navigator={});let e=navigator;switch(e.userAgent||(e.userAgent=`${t.rt.variant}/${t.rt.version}`),e.language||(e.language=null),e.languages?.constructor||(e.languages=[]),e.hardwareConcurrency||(e.hardwareConcurrency=t.rt.cores),e.deviceMemory||(e.deviceMemory=Math.min(2**Math.round(Math.log2(t.rt.memory.total/1073741824)),8)),e.permissions||(e.permissions={query:r=>t.rt.perms.querySync(r)}),t.rt.variant){case"Node":case"Bun":break;case"Deno":break}switch(t.rt.variant){case"Deno":{let r=Worker;self.Worker=class extends EventTarget{#e;postMessage(s,n){this.#e.postMessage(s,n)}terminate(){this.#e.terminate()}constructor(s,n={}){super();let a=this;s=new URL(s,`file://${t.rt.cwd()}/`).href,(!n.type||n.type=="classic")&&(n.type="module"),a.#e=new r(s,n),a.#e.addEventListener("message",({data:c,origin:o,source:l,ports:u})=>{a.dispatchEvent(new MessageEvent("message",{data:c,origin:o,source:l,ports:u}))}),a.#e.addEventListener("error",({message:c,filename:o,lineno:l,colno:u,error:E})=>{a.dispatchEvent(new ErrorEvent("error",{message:c,filename:o,lineno:l,colno:u,error:E||new Error(c,o,l)}))}),a.#e.addEventListener("messageerror",({data:c})=>{a.dispatchEvent(new MessageEvent("messageerror",{data:c,origin,source,ports}))})}};break}case"Node":{self.Worker=class extends EventTarget{#e;#t={};addEventListener(r,s,n){let a=this,c=function(o){if(o.data?.wbType=="!ErrorEvent"){for(let l in o.data)l!="wbType"&&(o[l]=o.data[l]);delete o.data}s.call(a,o)};a.#t[s]=c,super.addEventListener(r,c,n)}postMessage(r,s){this.#e.postMessage(r,s)}terminate(){this.#e.terminate()}constructor(r,s={}){super();let n=this;r=new URL(new URL(r,`file://${t.rt.cwd()}/`).href),s.env=s.env||workerThreads.SHARE_ENV,n.#e=new workerThreads.Worker(r,s),n.#e.on("message",a=>{n.dispatchEvent(new MessageEvent("message",{data:a,origin:r}))}),n.#e.on("error",a=>{let{message:c,filename:o,lineno:l,colno:u}=a;n.dispatchEvent(new MessageEvent("error",{data:{error:a,message:c,filename:o,lineno:l,colno:u,wbType:"!ErrorEvent"}}))}),n.#e.on("messageerror",a=>{n.dispatchEvent(new MessageEvent("messageerror",{data:a,origin:r}))})}},workerThreads.isMainThread||(self.postMessage=function(r,s){workerThreads.parentPort.postMessage(r,s)},self.addEventListener=function(r,s){switch(r){case"message":{workerThreads.parentPort.on("message",n=>{s.call(self,new MessageEvent("message",{data:n}))});break}}});break}}};self.ChokerStream=le;let m,Re=(m=class{},i(m,"args",q.args),i(m,"main",q.main),i(m,"version",x.version),i(m,"rt",J),i(m,"env",Q),i(m,"file",te),i(m,"net",re),i(m,"web",oe),i(m,"util",ce),m);he(Re);export{Re as WingBlade};
