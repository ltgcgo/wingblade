"use strict";import{WebSocket,WebSocketServer as WebSocketService}from"ws";import{fetch,Request,Response}from"undici";import os from"node:os";import fs from"node:fs";import http from"node:http";import crypto from"node:crypto";
if(!globalThis.self){globalThis.self=globalThis};
var A=Object.defineProperty;var B=(e,t,r)=>t in e?A(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var n=(e,t,r)=>(B(e,typeof t!="symbol"?t+"":t,r),r);var h,y=(h=class{static get memUsed(){return process.memoryUsage()}static exit(e=0){process.exit(e)}},n(h,"os",os.platform()),n(h,"variant","Node"),n(h,"version",process.version.replace("v","")),n(h,"persist",!0),n(h,"networkDefer",!1),h),f="delete,get,has,set,toObject".split(","),x=new Proxy({get:(e,t)=>process.env[e]||t,set:(e,t)=>{process.env[e]=t},delete:e=>{delete process.env[e]},has:e=>!!process.env[e],toObject:()=>process.env},{get:(e,t)=>f.indexOf(t)<0&&t.constructor==String?e.get(t):e[t],set:(e,t,r)=>{if(f.indexOf(t)<0)if(t.constructor==String)e.set(t,r);else throw new TypeError("Invalid type for key");else throw new Error("Tried to write protected properties")},has:(e,t)=>f.indexOf(t)<0?t.constructor==String?e.has(t):e[t]!=null:!1,deleteProperty:(e,t)=>{if(f.indexOf(t)<0)if(t.constructor==String)e.delete(t);else throw new TypeError("Invalid type for key");else throw new Error("Tried to delete protected properties")}});var C=class{static async read(e,t){return new Uint8Array((await fs.promises.readFile(e,t)).buffer)}static async write(e,t,r){let s={flag:"w"};r.append&&(s.flag="a"),r.signal&&(s.signal=r.signal),r.mode&&(s.mode=r.mode),await fs.promises.writeFile(e,t,s)}},E=C;var L=class{},S=L;var $='<!DOCTYPE html><head><meta charset="utf-8"/><title>WingBlade error</title><style>body{background:#000;color:#ccc;}</style></head><body><div style="width:75vw;min-width:360px;max-width:1080px;margin:0 auto;"><p>WingBlade has encountered an error on ${runtime}.</p><pre>${stackTrace}</pre></div></body>\n';var U=class{#e;#s;#a=!1;#r=[];#t={open:[],message:[],error:[],close:[]};addEventListener(e,t){this.#e?e!="open"?this.#e.addEventListener(e,t):t(new Event("open")):this.#t[e].push(t)}get binaryType(){return this.#e?.binaryType||""}get bufferedAmount(){return this.#e?.bufferedAmount||0}get extensions(){return this.#e?.extensions||""}get readyState(){return this.#e?.readyState||0}get url(){return this.#e?.url||this.#s}attach(e){if(this.#a)return!1;if(this.#e)throw new Error("Already attached a WebSocket object");this.#e=e;let t=this;switch(e.readyState){case 0:case 1:{for(let s in this.#t)this.#t[s].forEach(p=>{e.addEventListener(s,p)});let r=new Event("open");this.#t.open.forEach(s=>{s(r)});break}case 2:case 3:{t.dispatchEvent(new Event("close"));break}}}close(...e){return this.#a=!0,this.#e?.close(...e)}send(e){this.#e?this.#e.send(e):this.#r.push(e)}constructor(e){this.#s=e.url.replace("http","ws"),this.addEventListener("open",t=>{for(;this.#r.length>0;)this.#e.send(this.#r.shift())})}},k=class{static serve(e,t={}){let r=`file://${process.cwd()}`,s=t.port||8e3,p=t.hostname||"0.0.0.0",w=http.createServer(async function(a,i){let u,m=new ReadableStream({type:"bytes",start:o=>{u=o},cancel:o=>{},autoAllocateChunkSize:65536}),d={method:a.method,headers:a.headers},R=["GET","HEAD"].indexOf(d.method)==-1;a.on("data",o=>{u.enqueue(o)}).on("end",()=>{u.close()}),R&&(d.body=m,d.duplex="half");let g=new Request(`${a.headers["x-forwarded-proto"]||"http"}://${a.headers.host}${a.url}`,d),l;try{l=await e(g),l?.constructor!=Response&&(l=new Response(JSON.stringify(l),{headers:{"Content-Type":"application/json"}}))}catch(o){console.error(`Request error at ${g.method} ${g.url}
${o.stack}`),l=new Response($.replace("${runtime}",WingBlade.rt.variant).replace("${stackTrace}",o.stack.replaceAll(r,"wingblade:app")),{status:502,headers:{"Content-Type":"text/html"}})}l?.headers?.forEach((o,v)=>{i.setHeader(v,o)}),i.statusCode=l?.status||200,l?.statusText&&(i.statusMessage=l.statusText),i.flushHeaders();let W=l.body.getReader(),b=!0;for(;b;)await W.read().then(({done:o,value:v})=>{o?(i.end(),b=!1):i.write(v)})});return w.on("upgrade",async(a,i,u)=>{let m={method:a.method,headers:a.headers},d=new Request(`${a.headers["x-forwarded-proto"]||"http"}://${a.headers.host}${a.url}`,m);d.raw={requester:a,socket:i,head:u},await e(d)}),w.listen(s,p,()=>{(t.onListen||function({port:a,hostname:i}){i&&(i="127.0.0.1"),console.error(`WingBlade serving at http://${i}:${a}`)})({port:s,hostname:p})}),w}static acceptWs(e,t){let r=new WebSocketService({noServer:!0}),s=new U(e);return r.handleUpgrade(e.raw.requester,e.raw.socket,e.raw.head,function(p){s.attach(p)}),{socket:s,response:new Response(null,{status:200})}}},T=k;var M=class{static randomInt(e){return Math.floor(Math.random()*e)}static sleep(e,t=0){return new Promise(r=>{AbortSignal.timeout(e+Math.floor(t*Math.random())).addEventListener("abort",()=>{r()})})}},O=M;var c,se=(c=class{},n(c,"args",process.argv.slice(2)),n(c,"rt",y),n(c,"env",x),n(c,"file",E),n(c,"net",S),n(c,"web",T),n(c,"util",O),c);export{se as WingBlade};
