// Copyright (c) Lightingale WingBlade Author(s) 2023.
// Licensed under GNU LGPL 3.0 or later.
"use strict";import{WebSocket,WebSocketServer as WebSocketService}from"ws";import{fetch,Request,Response}from"undici";import os from"node:os";import fs from"node:fs";import http from"node:http";import crypto from"node:crypto";import dns from"node:dns";import workerThreads from"node:worker_threads";if(!globalThis.self){globalThis.self=globalThis};let A=Object.defineProperty;let I=(e,t,r)=>t in e?A(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;let o=(e,t,r)=>(I(e,typeof t!="symbol"?t+"":t,r),r);let T={args:process.argv.slice(2),main:process.argv[1]};let v=class{constructor(e,t="granted"){if(!e)throw new TypeError(`The provided value "${e}" is not a valid permission name.`);this.name=e,this.state=t}};let S={version:"0.1"};let B={query:async e=>new v(e?.name),request:async e=>new v(e?.name),revoke:async e=>new v(e?.name),querySync:e=>new v(e?.name),requestSync:e=>new v(e?.name),revokeSync:e=>new v(e?.name)},h,x=(h=class{static get memory(){let{rss:e,heapTotal:t,heapUsed:r,external:s}=process.memoryUsage(),a=os.totalmem(),i=os.freemem();return{rss:e,heapTotal:t,heapUsed:r,external:s,total:a,free:i}}static exit(e=0){process.exit(e)}static gid(){return os.userInfo().gid}static interfaces(){let e=os.networkInterfaces(),t=[];for(let r in e)for(let s=0;s<e[r].length;s++){let{address:a,cidr:i,netmask:n,family:c,mac:l,internal:f,scope_id:p}=e[r][s];l||(l="00:00:00:00:00:00"),t.push({family:c,name:r,address:a,netmask:n,scopeid:scope_id,cidr:i,mac:l})}return t}static systemMemoryInfo(){return{total:os.totalmem(),free:os.freemem()}}static uid(){return os.userInfo().uid}},o(h,"os",os.platform()),o(h,"variant","Node"),o(h,"version",process.versions.node),o(h,"versions",{deno:"1.36.4",v8:process.versions.v8.split("-")[0],wingblade:S.version}),o(h,"persist",!0),o(h,"networkDefer",!1),o(h,"cores",os.cpus().length),o(h,"perms",B),o(h,"noColor",process.env.NO_COLOR?.length>0),o(h,"pid",process.pid),o(h,"ppid",process.ppid),o(h,"chdir",process.chdir),o(h,"cwd",process.cwd),o(h,"execPath",process.execPath),o(h,"hostname",os.hostname),o(h,"ifMap",os.networkInterfaces),o(h,"loadavg",os.loadavg),o(h,"memoryUsage",process.memoryUsage),o(h,"osUptime",os.uptime),h),L="delete,get,has,set,toObject".split(","),C=new Proxy({get:(e,t)=>process.env[e]||t,set:(e,t)=>{process.env[e]=t},delete:e=>{delete process.env[e]},has:e=>!!process.env[e],toObject:()=>process.env},{get:(e,t)=>L.indexOf(t)<0&&t.constructor==String?e.get(t):e[t],set:(e,t,r)=>{if(L.indexOf(t)<0)if(t.constructor==String)e.set(t,r);else throw new TypeError("Invalid type for key");else throw new Error("Tried to write protected properties")},has:(e,t)=>L.indexOf(t)<0?t.constructor==String?e.has(t):e[t]!=null:!1,deleteProperty:(e,t)=>{if(L.indexOf(t)<0)if(t.constructor==String)e.delete(t);else throw new TypeError("Invalid type for key");else throw new Error("Tried to delete protected properties")}});let D=class{static async read(e,t){return new Uint8Array((await fs.promises.readFile(e,t)).buffer)}static async write(e,t,r){let s={flag:"w"};r.append&&(s.flag="a"),r.signal&&(s.signal=r.signal),r.mode&&(s.mode=r.mode),await fs.promises.writeFile(e,t,s)}},O=D;let W=class extends EventTarget{#e;#r;#t;#i;#s;#d;#l;#a;#c=[];#o=[];#n=3;#h=!1;CONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3;get protocol(){return this.#e}get hostname(){return this.#r}get port(){return this.#t}get readyState(){return this.#n}get source(){return this.#l}get sink(){return this.#a}addEventListener(e,t,r){e=="open"&&this.readyState==this.OPEN&&t.call(this,new Event("open")),super.addEventListener(e,t,r)}send(e){if(this.#h)throw new Error("Cannot enqueue or send data on a freed connection");this.#n!=1?this.#c.push(e):this.#a?.desiredSize<0||this.#o.length?(this.#o.push(e),this.#a.ready.then(()=>{let t=this.#o.shift();t&&this.#a.write(t)})):this.#a.write(e)}async connect(){if(this.#h)throw new Error("Cannot restart a freed connection");switch(this.#n<this.CLOSING&&console.debug(`${this.#e.toUpperCase()} connection is already open.`),this.#n=this.CONNECTING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#n=this.OPEN,this.dispatchEvent(new Event("open"))}close(){switch(this.#n>this.OPEN&&console.debug(`${this.#e.toUpperCase()} connection is already closed.`),this.#n=this.CLOSING,this.#e){case"tcp":break;default:throw this.free(),new Error(`Invalid protocol "${this.#e}"`)}this.#n=this.CLOSED,this.dispatchEvent(new Event("close"))}free(){return this.close(),this.#h=!0,this.#c.splice(0,this.#c.length)}constructor({proto:e,host:t,port:r},s){super(),e=e||"tcp",t=t||"127.0.0.1",r=r||80,this.#e=e,this.#r=t,this.#t=r,this.addEventListener("open",async()=>{this.#c.forEach(a=>{this.send(a)})}),this.addEventListener("close",()=>{this.#o.length&&this.#c.splice(0,0,this.#o.splice(0,this.#o.length))}),s&&this.connect()}},k,q=(k=class{},o(k,"RawClient",W),k),M=q;let R='<!DOCTYPE html><head><meta charset="utf-8"/><title>WingBlade error</title><style>body{background:#000;color:#ccc;}</style></head><body><div style="width:75vw;min-width:360px;max-width:1080px;margin:0 auto;"><p>WingBlade has encountered an error on ${runtime}.</p><pre>${stackTrace}</pre></div></body>\n';let j=class{#e;#r;#t=!1;#i=[];#s={open:[],message:[],error:[],close:[]};addEventListener(e,t){this.#e?e!="open"?this.#e.addEventListener(e,t):t(new Event("open")):this.#s[e].push(t)}get binaryType(){return this.#e?.binaryType||""}get bufferedAmount(){return this.#e?.bufferedAmount||0}get extensions(){return this.#e?.extensions||""}get readyState(){return this.#e?.readyState||0}get url(){return this.#e?.url||this.#r}attach(e){if(this.#t)return!1;if(this.#e)throw new Error("Already attached a WebSocket object");this.#e=e;let t=this;switch(e.readyState){case 0:case 1:{for(let s in this.#s)this.#s[s].forEach(a=>{e.addEventListener(s,a)});let r=new Event("open");this.#s.open.forEach(s=>{s(r)});break}case 2:case 3:{t.dispatchEvent(new Event("close"));break}}}close(...e){return this.#t=!0,this.#e?.close(...e)}send(e){this.#e?this.#e.send(e):this.#i.push(e)}constructor(e){this.#r=e.url.replace("http","ws"),this.addEventListener("open",t=>{for(;this.#i.length>0;)this.#e.send(this.#i.shift())})}},H=class{static serve(e,t={}){let r=`file://${process.cwd()}`,s=t.port||8e3,a=t.hostname||"0.0.0.0",i=http.createServer(async function(n,c){let l,f=new ReadableStream({type:"bytes",start:d=>{l=d},cancel:d=>{},autoAllocateChunkSize:65536}),p={method:n.method,headers:n.headers},g=["GET","HEAD"].indexOf(p.method)==-1;n.on("data",d=>{l.enqueue(d)}).on("end",()=>{l.close()}),g&&(p.body=f,p.duplex="half");let b=new Request(`${n.headers["x-forwarded-proto"]||"http"}://${n.headers.host}${n.url}`,p),w;try{w=await e(b),w?.constructor!=Response&&(w=new Response(JSON.stringify(w),{headers:{"Content-Type":"text/plain"}}))}catch(d){console.error(`Request error at ${b.method} ${b.url}
${d.stack}`),w=new Response(R.replace("${runtime}",WingBlade.rt.variant).replace("${stackTrace}",d.stack.replaceAll(r,"wingblade:app")),{status:502,headers:{"Content-Type":"text/html"}})}w?.headers?.forEach((d,y)=>{c.setHeader(y,d)}),c.statusCode=w?.status||200,w?.statusText&&(c.statusMessage=w.statusText),c.flushHeaders();let u=w.body.getReader(),E=!0;for(;E;)await u.read().then(({done:d,value:y})=>{d?(c.end(),E=!1):c.write(y)})});return i.on("upgrade",async(n,c,l)=>{let f={method:n.method,headers:n.headers},p=new Request(`${n.headers["x-forwarded-proto"]||"http"}://${n.headers.host}${n.url}`,f);p.raw={requester:n,socket:c,head:l},await e(p)}),i.listen(s,a,()=>{(t.onListen||function({port:n,hostname:c}){c&&(c="127.0.0.1"),console.error(`WingBlade serving at http://${c}:${n}`)})({port:s,hostname:a})}),i}static acceptWs(e,t){let r=new WebSocketService({noServer:!0}),s=new j(e);return r.handleUpgrade(e.raw.requester,e.raw.socket,e.raw.head,function(a){s.attach(a)}),{socket:s,response:new Response(null,{status:200})}}},$=H;let _=class{static randomInt(e){return Math.floor(Math.random()*e)}static sleep(e,t=0){return new Promise((r,s)=>{setTimeout(r,e+Math.floor(t*Math.random()))})}},P=_;if(self.ReadableStream)ReadableStream.prototype.array=async function(){let e=this.getReader(),t=[],r=!0;for(;r;){let{done:s,value:a}=await e.read();s&&(r=!1),a?.byteLength&&t.push(new Uint8Array(a.buffer).subarray(a.byteOffset,a.byteLength))}return t},ReadableStream.prototype.arrayBuffer=async function(){let e=await this.array();return Buffer.concat(e)},ReadableStream.prototype.blob=async function(){return new Blob(await this.array())},ReadableStream.prototype.text=async function(e="utf-8"){let t=await this.arrayBuffer();return new TextDecoder(e,{fatal:!0}).decode(t)},ReadableStream.prototype.json=async function(e){return JSON.parse(await this.text(e))};else throw"ReadableStream not present in this runtime.";let F=class{#e=!1;#r;#t;resolve(t){let r=this;r.resolved||(r.#e=!0,r.#r=t,r.#t&&(r.#t(t),r.#t=void 0))}wait(){let t=this;return t.#e?new Promise(r=>{r(t.#r)}):new Promise(r=>{t.#t=r})}},V=class{#e=256;#r=0;#t;#i;#s;#d;#l;#a=new F;alwaysCopy=!1;get chunk(){return this.#e}get sink(){return this.#t}get source(){return this.#s}attach(t){let r=this;r.#t=t,r.#i=t.getReader(),r.#a.resolve()}constructor(t=1024,r=!1){let s=this;s.#e=t,s.alwaysCopy=r,s.#l=new ByteLengthQueuingStrategy({highWaterMark:t});let a=0,i;s.#s=new ReadableStream({cancel:async n=>{await s.#t.cancel(n)},start:async n=>{},pull:async n=>{s.#r++;let c=!1;await s.#a.wait();let l=!0,f=0;for(;l&&f<s.#e;){let{done:p,value:g}=await s.#i.read(),b=g?.byteLength||0;f+=b;let w=0,u,E=!0;if(g?.byteLength)for(u=new Uint8Array(g.buffer,g.byteOffset,g.byteLength);E;){let d;if(u.byteLength<1&&(E=!1),a){let y=u.subarray(0,s.#e-a);i.set(y,a),a+y.byteLength<s.#e?a+=u.byteLength:(d=i,a=0,i=new Uint8Array(s.#e)),u=u.subarray(y.byteLength)}else u.byteLength<s.#e?(a=u.byteLength,i?.constructor!=Uint8Array&&(i=new Uint8Array(s.#e)),i.set(u)):s.alwaysCopy?(d=new Uint8Array(s.#e),d.set(u.subarray(0,s.#e))):d=u.subarray(0,s.#e),u=u.subarray(s.#e);d&&(n.enqueue(new Uint8Array(d)),w+=d?.byteLength)}p&&(a&&n.enqueue(i.subarray(0,a)),n.close(),l=!1)}}},this.#l)}},U=V;let N=function(e){self.navigator||(self.navigator={});let t=navigator;switch(t.userAgent||(t.userAgent=`${e.rt.variant}/${e.rt.version}`),t.language||(t.language=null),t.languages?.constructor||(t.languages=[]),t.hardwareConcurrency||(t.hardwareConcurrency=e.rt.cores),t.deviceMemory||(t.deviceMemory=Math.min(2**Math.round(Math.log2(e.rt.memory.total/1073741824)),8)),t.permissions||(t.permissions={query:r=>e.rt.perms.querySync(r)}),e.rt.variant){case"Node":case"Bun":break;case"Deno":break}switch(e.rt.variant){case"Deno":{let r=Worker;self.Worker=class extends EventTarget{#e;postMessage(s,a){this.#e.postMessage(s,a)}terminate(){this.#e.terminate()}constructor(s,a={}){super();let i=this;s=new URL(s,`file://${e.rt.cwd()}/`).href,(!a.type||a.type=="classic")&&(a.type="module"),i.#e=new r(s,a),i.#e.addEventListener("message",({data:n,origin:c,source:l,ports:f})=>{i.dispatchEvent(new MessageEvent("message",{data:n,origin:c,source:l,ports:f}))}),i.#e.addEventListener("error",({message:n,filename:c,lineno:l,colno:f,error:p})=>{i.dispatchEvent(new ErrorEvent("error",{message:n,filename:c,lineno:l,colno:f,error:p||new Error(n,c,l)}))}),i.#e.addEventListener("messageerror",({data:n})=>{i.dispatchEvent(new MessageEvent("messageerror",{data:n,origin,source,ports}))})}};break}case"Node":{self.Worker=class extends EventTarget{#e;#r={};addEventListener(r,s,a){let i=this,n=function(c){if(c.data?.wbType=="!ErrorEvent"){for(let l in c.data)l!="wbType"&&(c[l]=c.data[l]);delete c.data}s.call(i,c)};i.#r[s]=n,super.addEventListener(r,n,a)}postMessage(r,s){this.#e.postMessage(r,s)}terminate(){this.#e.terminate()}constructor(r,s={}){super();let a=this;r=new URL(new URL(r,`file://${e.rt.cwd()}/`).href),s.env=s.env||workerThreads.SHARE_ENV,a.#e=new workerThreads.Worker(r,s),a.#e.on("message",i=>{a.dispatchEvent(new MessageEvent("message",{data:i,origin:r}))}),a.#e.on("error",i=>{let{message:n,filename:c,lineno:l,colno:f}=i;a.dispatchEvent(new MessageEvent("error",{data:{error:i,message:n,filename:c,lineno:l,colno:f,wbType:"!ErrorEvent"}}))}),a.#e.on("messageerror",i=>{a.dispatchEvent(new MessageEvent("messageerror",{data:i,origin:r}))})}},workerThreads.isMainThread||(self.postMessage=function(r,s){workerThreads.parentPort.postMessage(r,s)},self.addEventListener=function(r,s){switch(r){case"message":{workerThreads.parentPort.on("message",a=>{s.call(self,new MessageEvent("message",{data:a}))});break}}});break}}};self.ChokerStream=U;let m,z=(m=class{},o(m,"args",T.args),o(m,"main",T.main),o(m,"version",S.version),o(m,"rt",x),o(m,"env",C),o(m,"file",O),o(m,"net",M),o(m,"web",$),o(m,"util",P),m);N(z);export{z as WingBlade};
